/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/signup": {
    /**
     * Attempts a new account signup 
     * @description Attempts a new account signup and returns a CompanyUser object on success
     */
    post: operations["postSignup"];
  };
  "/api/v1/activities": {
    /**
     * Gets a list of actvities 
     * @description Lists all activities
     */
    get: operations["getActivities"];
  };
  "/api/v1/actvities/download_entity/{activity_id}": {
    /**
     * Gets a PDF for the given activity 
     * @description Gets a PDF for the given activity
     */
    get: operations["getActivityHistoricalEntityPdf"];
  };
  "/api/v1/login": {
    /**
     * Attempts authentication 
     * @description Returns a CompanyUser object on success
     */
    post: operations["postLogin"];
  };
  "/api/v1/refresh": {
    /**
     * Refreshes the dataset 
     * @description Refreshes the dataset
     */
    post: operations["refresh"];
  };
  "/api/v1/yodlee/refresh": {
    /**
     * Processing webhooks from Yodlee 
     * @description Notifies the system when a data point can be refreshed
     */
    post: operations["yodleeRefreshWebhook"];
  };
  "/api/v1/bank_integrations": {
    /**
     * Gets a list of bank_integrations 
     * @description Lists all bank integrations
     */
    get: operations["getBankIntegrations"];
    /**
     * Adds a bank_integration 
     * @description Adds an bank_integration to a company
     */
    post: operations["storeBankIntegration"];
  };
  "/api/v1/bank_integrations/{id}": {
    /**
     * Shows a bank_integration 
     * @description Displays a bank_integration by id
     */
    get: operations["showBankIntegration"];
    /**
     * Updates a bank_integration 
     * @description Handles the updating of a bank_integration by id
     */
    put: operations["updateBankIntegration"];
    /**
     * Deletes a bank_integration 
     * @description Handles the deletion of a bank_integration by id
     */
    delete: operations["deleteBankIntegration"];
  };
  "/api/v1/bank_integrations/{id}/edit": {
    /**
     * Shows a bank_integration for editing 
     * @description Displays a bank_integration by id
     */
    get: operations["editBankIntegration"];
  };
  "/api/v1/bank_integrations/create": {
    /**
     * Gets a new blank bank_integration object 
     * @description Returns a blank object with default values
     */
    get: operations["getBankIntegrationsCreate"];
  };
  "/api/v1/bank_integrations/bulk": {
    /** Performs bulk actions on an array of bank_integrations */
    post: operations["bulkBankIntegrations"];
  };
  "/api/v1/bank_integrations/refresh_accounts": {
    /**
     * Gets the list of accounts from the remote server 
     * @description Adds an bank_integration to a company
     */
    post: operations["getRefreshAccounts"];
  };
  "/api/v1/bank_integrations/remove_account/account_id": {
    /**
     * Removes an account from the integration 
     * @description Removes an account from the integration
     */
    post: operations["getRemoveAccount"];
  };
  "/api/v1/bank_integrations/get_transactions/account_id": {
    /**
     * Retrieve transactions for a account 
     * @description Retrieve transactions for a account
     */
    post: operations["getAccountTransactions"];
  };
  "/api/v1/bank_transactions": {
    /**
     * Gets a list of bank_transactions 
     * @description Lists all bank integrations
     */
    get: operations["getBankTransactions"];
    /**
     * Adds a bank_transaction 
     * @description Adds an bank_transaction to a company
     */
    post: operations["storeBankTransaction"];
  };
  "/api/v1/bank_transactions/{id}": {
    /**
     * Shows a bank_transaction 
     * @description Displays a bank_transaction by id
     */
    get: operations["showBankTransaction"];
    /**
     * Updates a bank_transaction 
     * @description Handles the updating of a bank_transaction by id
     */
    put: operations["updateBankTransaction"];
    /**
     * Deletes a bank_transaction 
     * @description Handles the deletion of a bank_transaction by id
     */
    delete: operations["deleteBankTransaction"];
  };
  "/api/v1/bank_transactions/{id}/edit": {
    /**
     * Shows a bank_transaction for editing 
     * @description Displays a bank_transaction by id
     */
    get: operations["editBankTransaction"];
  };
  "/api/v1/bank_transactions/create": {
    /**
     * Gets a new blank bank_transaction object 
     * @description Returns a blank object with default values
     */
    get: operations["getBankTransactionsCreate"];
  };
  "/api/v1/bank_transations/bulk": {
    /** Performs bulk actions on an array of bank_transations */
    post: operations["bulkBankTransactions"];
  };
  "/api/v1/bank_transations/match": {
    /** Performs match actions on an array of bank_transactions */
    post: operations["matchBankTransactions"];
  };
  "/api/v1/bank_transaction_rules": {
    /**
     * Gets a list of bank_transaction_rules 
     * @description Lists all bank transaction rules
     */
    get: operations["getBankTransactionRules"];
    /**
     * Adds a bank_transaction rule 
     * @description Adds an bank_transaction to a company
     */
    post: operations["storeBankTransactionRule"];
  };
  "/api/v1/bank_transaction_rules/{id}": {
    /**
     * Shows a bank_transaction 
     * @description Displays a bank_transaction by id
     */
    get: operations["showBankTransactionRule"];
    /**
     * Updates a bank_transaction Rule 
     * @description Handles the updating of a bank_transaction rule by id
     */
    put: operations["updateBankTransactionRule"];
    /**
     * Deletes a bank_transaction rule 
     * @description Handles the deletion of a bank_transaction rule by id
     */
    delete: operations["deleteBankTransactionRule"];
  };
  "/api/v1/bank_transaction_rules/{id}/edit": {
    /**
     * Shows a bank_transaction for editing 
     * @description Displays a bank_transaction by id
     */
    get: operations["editBankTransactionRule"];
  };
  "/api/v1/bank_transaction_rules/create": {
    /**
     * Gets a new blank bank_transaction rule object 
     * @description Returns a blank object with default values
     */
    get: operations["getBankTransactionRulesCreate"];
  };
  "/api/v1/bank_transation_rules/bulk": {
    /** Performs bulk actions on an array of bank_transation rules */
    post: operations["bulkBankTransactionRules"];
  };
  "/api/v1/charts/totals": {
    /**
     * Get chart data 
     * @description Get chart data
     */
    post: operations["getChartTotals"];
  };
  "/api/v1/clients": {
    /**
     * Gets a list of clients 
     * @description Lists clients, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the clients, these are handled by the ClientFilters class which defines the methods available
     */
    get: operations["getClients"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeClient"];
  };
  "/api/v1/clients/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showClient"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateClient"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteClient"];
  };
  "/api/v1/clients/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editClient"];
  };
  "/api/v1/clients/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getClientsCreate"];
  };
  "/api/v1/clients/bulk": {
    /** Performs bulk actions on an array of clients */
    post: operations["bulkClients"];
  };
  "/api/v1/clients/{id}/upload": {
    /**
     * Uploads a document to a client 
     * @description Handles the uploading of a document to a client
     */
    put: operations["uploadClient"];
  };
  "/api/v1/clients/{id}/purge": {
    /**
     * Purges a client from the system 
     * @description Handles purging a client
     */
    post: operations["purgeClient"];
  };
  "/api/v1/clients/{id}/{mergeable_client_hashed_id}/merge": {
    /**
     * Merges two clients 
     * @description Handles merging 2 clients
     */
    post: operations["mergeClient"];
  };
  "/api/v1/client_gateway_tokens": {
    /**
     * Gets a list of client_gateway_tokens 
     * @description Lists client_gateway_tokens, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the client_gateway_tokens, these are handled by the ClientGatewayTokenFilters class which defines the methods available
     */
    get: operations["getClientGatewayTokens"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeClientGatewayToken"];
  };
  "/api/v1/client_gateway_tokens/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showClientGatewayToken"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateClientGatewayToken"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteClientGatewayToken"];
  };
  "/api/v1/client_gateway_tokens/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editClientGatewayToken"];
  };
  "/api/v1/client_gateway_tokens/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getClientGatewayTokensCreate"];
  };
  "/api/v1/client_statement": {
    /**
     * Return a PDF of the client statement 
     * @description Return a PDF of the client statement
     */
    post: operations["clientStatement"];
  };
  "/api/v1/companies": {
    /**
     * Gets a list of companies 
     * @description Lists companies, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the companies, these are handled by the CompanyFilters class which defines the methods available
     */
    get: operations["getCompanies"];
    /**
     * Adds a company 
     * @description Adds an company to the system
     */
    post: operations["storeCompany"];
  };
  "/api/v1/companies/create": {
    /**
     * Gets a new blank company object 
     * @description Returns a blank object with default values
     */
    get: operations["getCompaniesCreate"];
  };
  "/api/v1/companies/{id}": {
    /**
     * Shows an company 
     * @description Displays an company by id
     */
    get: operations["showCompany"];
    /**
     * Updates an company 
     * @description Handles the updating of an company by id
     */
    put: operations["updateCompany"];
    /**
     * Deletes a company 
     * @description Handles the deletion of an company by id
     */
    delete: operations["deleteCompany"];
  };
  "/api/v1/companies/{id}/edit": {
    /**
     * Shows an company for editting 
     * @description Displays an company by id
     */
    get: operations["editCompany"];
  };
  "/api/v1/companies/{id}/upload": {
    /**
     * Uploads a document to a company 
     * @description Handles the uploading of a document to a company
     */
    put: operations["uploadCompanies"];
  };
  "/api/v1/companies/{company}/default": {
    /**
     * Sets the company as the default company. 
     * @description Sets the company as the default company.
     */
    post: operations["setDefaultCompany"];
  };
  "/api/v1/company_gateways": {
    /**
     * Gets a list of company_gateways 
     * @description Lists company_gateways, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the company_gateways, these are handled by the CompanyGatewayFilters class which defines the methods available
     */
    get: operations["getCompanyGateways"];
    /**
     * Adds a CompanyGateway 
     * @description Adds an CompanyGateway to the system
     */
    post: operations["storeCompanyGateway"];
  };
  "/api/v1/company_gateways/create": {
    /**
     * Gets a new blank CompanyGateway object 
     * @description Returns a blank object with default values
     */
    get: operations["getCompanyGatewaysCreate"];
  };
  "/api/v1/company_gateways/{id}": {
    /**
     * Shows an CompanyGateway 
     * @description Displays an CompanyGateway by id
     */
    get: operations["showCompanyGateway"];
    /**
     * Updates an CompanyGateway 
     * @description Handles the updating of an CompanyGateway by id
     */
    put: operations["updateCompanyGateway"];
    /**
     * Deletes a CompanyGateway 
     * @description Handles the deletion of an CompanyGateway by id
     */
    delete: operations["deleteCompanyGateway"];
  };
  "/api/v1/company_gateways/{id}/edit": {
    /**
     * Shows an CompanyGateway for editting 
     * @description Displays an CompanyGateway by id
     */
    get: operations["editCompanyGateway"];
  };
  "/api/v1/company_gateways/bulk": {
    /** Performs bulk actions on an array of company_gateways */
    post: operations["bulkCompanyGateways"];
  };
  "/api/v1/company_ledger": {
    /**
     * Gets a list of company_ledger 
     * @description Lists the company_ledger.
     */
    get: operations["getCompanyLedger"];
  };
  "/api/v1/company_users": {
    /**
     * Update a company user record 
     * @description Attempts to update a company user record. A company user can modify only their settings fields. Full access for Admin users
     */
    post: operations["updateCompanyUser"];
  };
  "/api/v1/connected_account": {
    /**
     * Connect an oauth user to an existing user 
     * @description Refreshes the dataset
     */
    post: operations["connected_account"];
  };
  "/api/v1/credits": {
    /**
     * Gets a list of credits 
     * @description Lists credits, search and filters allow fine grained lists to be generated.
     *      *
     *      *      Query parameters can be added to performed more fine grained filtering of the credits, these are handled by the CreditFilters class which defines the methods available
     */
    get: operations["getCredits"];
    /**
     * Adds a credit 
     * @description Adds an credit to the system
     */
    post: operations["storeCredit"];
  };
  "/api/v1/credits/create": {
    /**
     * Gets a new blank credit object 
     * @description Returns a blank object with default values
     */
    get: operations["getCreditsCreate"];
  };
  "/api/v1/credits/{id}": {
    /**
     * Shows an credit 
     * @description Displays an credit by id
     */
    get: operations["showCredit"];
    /**
     * Updates an Credit 
     * @description Handles the updating of an Credit by id
     */
    put: operations["updateCredit"];
    /**
     * Deletes a credit 
     * @description Handles the deletion of an credit by id
     */
    delete: operations["deleteCredit"];
  };
  "/api/v1/credits/{id}/edit": {
    /**
     * Shows an credit for editting 
     * @description Displays an credit by id
     */
    get: operations["editCredit"];
  };
  "/api/v1/credits/bulk": {
    /** Performs bulk actions on an array of credits */
    post: operations["bulkCredits"];
  };
  "/api/v1/credits/{id}/upload": {
    /**
     * Uploads a document to a credit 
     * @description Handles the uploading of a document to a credit
     */
    put: operations["uploadCredits"];
  };
  "/api/v1/designs": {
    /**
     * Gets a list of designs 
     * @description Lists designs
     */
    get: operations["getDesigns"];
    /**
     * Adds a design 
     * @description Adds an design to a company
     */
    post: operations["storeDesign"];
  };
  "/api/v1/designs/{id}": {
    /**
     * Shows a design 
     * @description Displays a design by id
     */
    get: operations["showDesign"];
    /**
     * Updates a design 
     * @description Handles the updating of a design by id
     */
    put: operations["updateDesign"];
    /**
     * Deletes a design 
     * @description Handles the deletion of a design by id
     */
    delete: operations["deleteDesign"];
  };
  "/api/v1/designs/{id}/edit": {
    /**
     * Shows a design for editting 
     * @description Displays a design by id
     */
    get: operations["editDesign"];
  };
  "/api/v1/designs/create": {
    /**
     * Gets a new blank design object 
     * @description Returns a blank object with default values
     */
    get: operations["getDesignsCreate"];
  };
  "/api/v1/designs/bulk": {
    /** Performs bulk actions on an array of designs */
    post: operations["bulkDesigns"];
  };
  "/api/v1/documents": {
    /**
     * Gets a list of documents 
     * @description Lists documents, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the documents, these are handled by the DocumentsFilters class which defines the methods available
     */
    get: operations["getDocuments"];
  };
  "/api/v1/emails": {
    /**
     * Sends an email for an entity 
     * @description Sends an email for an entity
     */
    post: operations["sendEmailTemplate"];
  };
  "/api/v1/expense_categories": {
    /**
     * Gets a list of expense_categories 
     * @description Lists tax rates
     */
    get: operations["getExpenseCategorys"];
    /**
     * Adds a expense category 
     * @description Adds an expense category to the system
     */
    post: operations["storeExpenseCategory"];
  };
  "/api/v1/expense_categories/create": {
    /**
     * Gets a new blank Expens Category object 
     * @description Returns a blank object with default values
     */
    get: operations["getExpenseCategoryCreate"];
  };
  "/api/v1/expense_categories/{id}": {
    /**
     * Shows a Expens Category 
     * @description Displays an ExpenseCategory by id
     */
    get: operations["showExpenseCategory"];
    /**
     * Updates a tax rate 
     * @description Handles the updating of a tax rate by id
     */
    put: operations["updateExpenseCategory"];
    /**
     * Deletes a ExpenseCategory 
     * @description Handles the deletion of an ExpenseCategory by id
     */
    delete: operations["deleteExpenseCategory"];
  };
  "/api/v1/expense_categories/{id}/edit": {
    /**
     * Shows a Expens Category for editting 
     * @description Displays a Expens Category by id
     */
    get: operations["editExpenseCategory"];
  };
  "/api/v1/expense_categories/bulk": {
    /** Performs bulk actions on an array of ExpenseCategorys */
    post: operations["bulkExpenseCategorys"];
  };
  "/api/v1/expenses": {
    /**
     * Gets a list of expenses 
     * @description Lists expenses, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the expenses, these are handled by the ExpenseFilters class which defines the methods available
     */
    get: operations["getExpenses"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeExpense"];
  };
  "/api/v1/expenses/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showExpense"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateExpense"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteExpense"];
  };
  "/api/v1/expenses/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editExpense"];
  };
  "/api/v1/expenses/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getExpensesCreate"];
  };
  "/api/v1/expenses/bulk": {
    /** Performs bulk actions on an array of expenses */
    post: operations["bulkExpenses"];
  };
  "/api/v1/expenses/{id}/upload": {
    /**
     * Uploads a document to a expense 
     * @description Handles the uploading of a document to a expense
     */
    put: operations["uploadExpense"];
  };
  "/api/v1/export": {
    /**
     * Export data from the system 
     * @description Export data from the system
     */
    post: operations["getExport"];
  };
  "/api/v1/group_settings": {
    /**
     * Gets a list of group_settings 
     * @description Lists group_settings, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the group_settings, these are handled by the GroupSettingFilters class which defines the methods available
     */
    get: operations["getGroupSettings"];
    /**
     * Adds a GroupSetting 
     * @description Adds an GroupSetting to the system
     */
    post: operations["storeGroupSetting"];
  };
  "/api/v1/group_settings/create": {
    /**
     * Gets a new blank GroupSetting object 
     * @description Returns a blank object with default values
     */
    get: operations["getGroupSettingsCreate"];
  };
  "/api/v1/group_settings/{id}": {
    /**
     * Shows an GroupSetting 
     * @description Displays an GroupSetting by id
     */
    get: operations["showGroupSetting"];
    /**
     * Updates an GroupSetting 
     * @description Handles the updating of an GroupSetting by id
     */
    put: operations["updateGroupSetting"];
    /**
     * Deletes a GroupSetting 
     * @description Handles the deletion of an GroupSetting by id
     */
    delete: operations["deleteGroupSetting"];
  };
  "/api/v1/group_settings/{id}/edit": {
    /**
     * Shows an GroupSetting for editting 
     * @description Displays an GroupSetting by id
     */
    get: operations["editGroupSetting"];
  };
  "/api/v1/group_settings/bulk": {
    /** Performs bulk actions on an array of group_settings */
    post: operations["bulkGroupSettings"];
  };
  "/api/v1/group_settings/{id}/upload": {
    /**
     * Uploads a document to a group setting 
     * @description Handles the uploading of a document to a group setting
     */
    put: operations["uploadGroupSetting"];
  };
  "/api/v1/preimport": {
    /**
     * Pre Import checks - returns a reference to the job and the headers of the CSV 
     * @description Pre Import checks - returns a reference to the job and the headers of the CSV
     */
    post: operations["preimport"];
  };
  "/api/v1/import_json": {
    /**
     * Import data from the system 
     * @description Import data from the system
     */
    post: operations["getImportJson"];
  };
  "/api/v1/apple/confirm_purchase": {
    /**
     * Processing webhooks from Apple for in app purchases 
     * @description Adds an credit to the system
     */
    post: operations["confirmApplePurchase"];
  };
  "/api/v1/apple/process_webhook": {
    /**
     * Processing event webhooks from Apple for in purchase / subscription status update 
     * @description Adds an credit to the system
     */
    post: operations["processAppleWebhook"];
  };
  "/api/v1/invoices": {
    /**
     * Gets a list of invoices 
     * @description Lists invoices, search and filters allow fine grained lists to be generated.
     *      *
     *      *		Query parameters can be added to performed more fine grained filtering of the invoices, these are handled by the InvoiceFilters class which defines the methods available
     */
    get: operations["getInvoices"];
    /**
     * Adds a invoice 
     * @description Adds an invoice to the system
     */
    post: operations["storeInvoice"];
  };
  "/api/v1/invoices/create": {
    /**
     * Gets a new blank invoice object 
     * @description Returns a blank object with default values
     */
    get: operations["getInvoicesCreate"];
  };
  "/api/v1/invoices/{id}": {
    /**
     * Shows an invoice 
     * @description Displays an invoice by id
     */
    get: operations["showInvoice"];
    /**
     * Updates an invoice 
     * @description Handles the updating of an invoice by id
     */
    put: operations["updateInvoice"];
    /**
     * Deletes a invoice 
     * @description Handles the deletion of an invoice by id
     */
    delete: operations["deleteInvoice"];
  };
  "/api/v1/invoices/{id}/edit": {
    /**
     * Shows an invoice for editting 
     * @description Displays an invoice by id
     */
    get: operations["editInvoice"];
  };
  "/api/v1/invoices/bulk": {
    /** Performs bulk actions on an array of invoices */
    post: operations["bulkInvoices"];
  };
  "/api/v1/invoices/{id}/{action}": {
    /**
     * Performs a custom action on an invoice 
     * @description Performs a custom action on an invoice.
     *      *
     *      *        The current range of actions are as follows
     *      *        - clone_to_invoice
     *      *        - clone_to_quote
     *      *        - history
     *      *        - delivery_note
     *      *        - mark_paid
     *      *        - download
     *      *        - archive
     *      *        - delete
     *      *        - email
     */
    get: operations["actionInvoice"];
  };
  "/api/v1/invoice/{invitation_key}/download": {
    /**
     * Download a specific invoice by invitation key 
     * @description Downloads a specific invoice
     */
    get: operations["downloadInvoice"];
  };
  "/api/v1/invoices/{id}/delivery_note": {
    /**
     * Download a specific invoice delivery notes 
     * @description Downloads a specific invoice delivery notes
     */
    get: operations["deliveryNote"];
  };
  "/api/v1/invoices/{id}/upload": {
    /**
     * Uploads a document to a invoice 
     * @description Handles the uploading of a document to a invoice
     */
    put: operations["uploadInvoice"];
  };
  "/api/v1/claim_license": {
    /**
     * Attempts to claim a white label license 
     * @description Attempts to claim a white label license
     */
    get: operations["getClaimLicense"];
  };
  "/api/v1/logout": {
    /**
     * Gets a list of logout 
     * @description Lists all logout
     */
    post: operations["getLogout"];
  };
  "/api/v1/migration/purge/{company}": {
    /**
     * Attempts to purge a company record and all its child records 
     * @description Attempts to purge a company record and all its child records
     */
    post: operations["postPurgeCompany"];
  };
  "/api/v1/migration/purge_save_settings/{company}": {
    /**
     * Attempts to purge a companies child records but save the company record and its settings 
     * @description Attempts to purge a companies child records but save the company record and its settings
     */
    post: operations["postPurgeCompanySaveSettings"];
  };
  "/api/v1/migration/start": {
    /**
     * Starts the migration from previous version of Invoice Ninja 
     * @description Starts the migration from previous version of Invoice Ninja
     */
    post: operations["postStartMigration"];
  };
  "/api/v1/one_time_token": {
    /**
     * Attempts to create a one time token 
     * @description Attempts to create a one time token
     */
    post: operations["oneTimeToken"];
  };
  "/api/v1/payments": {
    /**
     * Gets a list of payments 
     * @description Lists payments, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the payments, these are handled by the PaymentFilters class which defines the methods available
     */
    get: operations["getPayments"];
    /**
     * Adds a Payment 
     * @description Adds an Payment to the system
     */
    post: operations["storePayment"];
  };
  "/api/v1/payments/create": {
    /**
     * Gets a new blank Payment object 
     * @description Returns a blank object with default values
     */
    get: operations["getPaymentsCreate"];
  };
  "/api/v1/payments/{id}": {
    /**
     * Shows an Payment 
     * @description Displays an Payment by id
     */
    get: operations["showPayment"];
    /**
     * Updates an Payment 
     * @description Handles the updating of an Payment by id
     */
    put: operations["updatePayment"];
    /**
     * Deletes a Payment 
     * @description Handles the deletion of an Payment by id
     */
    delete: operations["deletePayment"];
  };
  "/api/v1/payments/{id}/edit": {
    /**
     * Shows an Payment for editting 
     * @description Displays an Payment by id
     */
    get: operations["editPayment"];
  };
  "/api/v1/payments/bulk": {
    /** Performs bulk actions on an array of payments */
    post: operations["bulkPayments"];
  };
  "/api/v1/payments/{id}/{action}": {
    /**
     * Performs a custom action on an Payment 
     * @description Performs a custom action on an Payment.
     * 
     *     The current range of actions are as follows
     *     - clone_to_Payment
     *     - clone_to_quote
     *     - history
     *     - delivery_note
     *     - mark_paid
     *     - download
     *     - archive
     *     - delete
     *     - email
     */
    get: operations["actionPayment"];
  };
  "/api/v1/payments/refund": {
    /**
     * Adds a Refund 
     * @description Adds an Refund to the system
     */
    post: operations["storeRefund"];
  };
  "/api/v1/payments/{id}/upload": {
    /**
     * Uploads a document to a payment 
     * @description Handles the uploading of a document to a payment
     */
    put: operations["uploadPayment"];
  };
  "/api/v1/payment_terms": {
    /**
     * Gets a list of payment terms 
     * @description Lists payment terms
     */
    get: operations["getPaymentTerms"];
    /**
     * Adds a Payment 
     * @description Adds a Payment Term to the system
     */
    post: operations["storePaymentTerm"];
  };
  "/api/v1/payment_terms/create": {
    /**
     * Gets a new blank PaymentTerm object 
     * @description Returns a blank object with default values
     */
    get: operations["getPaymentTermsCreate"];
  };
  "/api/v1/payment_terms/{id}": {
    /**
     * Shows a Payment Term 
     * @description Displays an Payment Term by id
     */
    get: operations["showPaymentTerm"];
    /**
     * Updates a Payment Term 
     * @description Handles the updating of an Payment Termby id
     */
    put: operations["updatePaymentTerm"];
    /**
     * Deletes a Payment Term 
     * @description Handles the deletion of an PaymentTerm by id
     */
    delete: operations["deletePaymentTerm"];
  };
  "/api/v1/payment_terms/{id}/edit": {
    /**
     * Shows an Payment Term for editting 
     * @description Displays an Payment Term by id
     */
    get: operations["editPaymentTerms"];
  };
  "/api/v1/payment_terms/bulk": {
    /** Performs bulk actions on an array of payment terms */
    post: operations["bulkPaymentTerms"];
  };
  "/api/v1/ping": {
    /**
     * Attempts to ping the API 
     * @description Attempts to ping the API
     */
    get: operations["getPing"];
  };
  "/api/v1/health_check": {
    /**
     * Attempts to get a health check from the API 
     * @description Attempts to get a health check from the API
     */
    get: operations["getHealthCheck"];
  };
  "/api/v1/postmark_webhook": {
    /**
     * Processing webhooks from PostMark 
     * @description Adds an credit to the system
     */
    post: operations["postmarkWebhook"];
  };
  "/api/v1/preview": {
    /**
     * Returns a pdf preview 
     * @description Returns a pdf preview.
     */
    post: operations["getPreview"];
  };
  "/api/v1/preview/purchase_order": {
    /**
     * Returns a pdf preview for purchase order 
     * @description Returns a pdf preview for purchase order.
     */
    post: operations["getPreviewPurchaseOrder"];
  };
  "/api/v1/products": {
    /**
     * Gets a list of products 
     * @description Lists products, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the products, these are handled by the ProductFilters class which defines the methods available
     */
    get: operations["getProducts"];
    /**
     * Adds a Product 
     * @description Adds an Product to the system
     */
    post: operations["storeProduct"];
  };
  "/api/v1/products/create": {
    /**
     * Gets a new blank Product object 
     * @description Returns a blank object with default values
     */
    get: operations["getProductsCreate"];
  };
  "/api/v1/products/{id}": {
    /**
     * Shows an Product 
     * @description Displays an Product by id
     */
    get: operations["showProduct"];
    /**
     * Updates an Product 
     * @description Handles the updating of an Product by id
     */
    put: operations["updateProduct"];
    /**
     * Deletes a Product 
     * @description Handles the deletion of an Product by id
     */
    delete: operations["deleteProduct"];
  };
  "/api/v1/products/{id}/edit": {
    /**
     * Shows an Product for editting 
     * @description Displays an Product by id
     */
    get: operations["editProduct"];
  };
  "/api/v1/products/bulk": {
    /** Performs bulk actions on an array of products */
    post: operations["bulkProducts"];
  };
  "/api/v1/products/{id}/upload": {
    /**
     * Uploads a document to a product 
     * @description Handles the uploading of a document to a product
     */
    put: operations["uploadProduct"];
  };
  "/api/v1/projects": {
    /**
     * Gets a list of projects 
     * @description Lists projects
     */
    get: operations["getProjects"];
    /**
     * Adds a project 
     * @description Adds an project to a company
     */
    post: operations["storeProject"];
  };
  "/api/v1/projects/{id}": {
    /**
     * Shows a project 
     * @description Displays a project by id
     */
    get: operations["showProject"];
    /**
     * Updates a project 
     * @description Handles the updating of a project by id
     */
    put: operations["updateProject"];
    /**
     * Deletes a project 
     * @description Handles the deletion of a project by id
     */
    delete: operations["deleteProject"];
  };
  "/api/v1/projects/{id}/edit": {
    /**
     * Shows a project for editting 
     * @description Displays a project by id
     */
    get: operations["editProject"];
  };
  "/api/v1/projects/create": {
    /**
     * Gets a new blank project object 
     * @description Returns a blank object with default values
     */
    get: operations["getProjectsCreate"];
  };
  "/api/v1/projects/bulk": {
    /** Performs bulk actions on an array of projects */
    post: operations["bulkProjects"];
  };
  "/api/v1/projects/{id}/upload": {
    /**
     * Uploads a document to a project 
     * @description Handles the uploading of a document to a project
     */
    put: operations["uploadProject"];
  };
  "/api/v1/purchase_orders": {
    /**
     * Gets a list of purchase orders 
     * @description Lists purchase orders, search and filters allow fine grained lists to be generated.
     *      *
     *      *      Query parameters can be added to performed more fine grained filtering of the purchase orders, these are handled by the PurchaseOrderFilters class which defines the methods available
     */
    get: operations["getPurchaseOrders"];
    /**
     * Adds a purchase order 
     * @description Adds an purchase order to the system
     */
    post: operations["storePurchaseOrder"];
  };
  "/api/v1/purchase_orders/create": {
    /**
     * Gets a new blank purchase order object 
     * @description Returns a blank object with default values
     */
    get: operations["getPurchaseOrderCreate"];
  };
  "/api/v1/purchase_orders/{id}": {
    /**
     * Shows an purcase orders 
     * @description Displays an purchase order by id
     */
    get: operations["showPurchaseOrder"];
    /**
     * Deletes a purchase order 
     * @description Handles the deletion of an purchase orders by id
     */
    delete: operations["deletePurchaseOrder"];
  };
  "/api/v1/purchase_orders/{id}/edit": {
    /**
     * Shows an purchase order for editting 
     * @description Displays an purchase order by id
     */
    get: operations["editPurchaseOrder"];
  };
  "/api/v1/purchase_order/{id}": {
    /**
     * Updates an purchase order 
     * @description Handles the updating of an purchase order by id
     */
    put: operations["updatePurchaseOrder"];
  };
  "/api/v1/purchase_orders/bulk": {
    /** Performs bulk actions on an array of purchase_orders */
    post: operations["bulkPurchaseOrderss"];
  };
  "/api/v1/purchase_orders/{id}/{action}": {
    /**
     * Performs a custom action on an purchase order 
     * @description Performs a custom action on an purchase order.
     *      *
     *      *        The current range of actions are as follows
     *      *        - mark_paid
     *      *        - download
     *      *        - archive
     *      *        - delete
     *      *        - email
     */
    get: operations["actionPurchaseOrder"];
  };
  "/api/v1/purchase_orders/{id}/upload": {
    /**
     * Uploads a document to a purchase_orders 
     * @description Handles the uploading of a document to a purchase_order
     */
    put: operations["uploadPurchaseOrder"];
  };
  "/api/v1/quotes": {
    /**
     * Gets a list of quotes 
     * @description Lists quotes, search and filters allow fine grained lists to be generated.
     *      *
     *      *      Query parameters can be added to performed more fine grained filtering of the quotes, these are handled by the QuoteFilters class which defines the methods available
     */
    get: operations["getQuotes"];
    /**
     * Adds a Quote 
     * @description Adds an Quote to the system
     */
    post: operations["storeQuote"];
  };
  "/api/v1/quotes/create": {
    /**
     * Gets a new blank Quote object 
     * @description Returns a blank object with default values
     */
    get: operations["getQuotesCreate"];
  };
  "/api/v1/quotes/{id}": {
    /**
     * Shows an Quote 
     * @description Displays an Quote by id
     */
    get: operations["showQuote"];
    /**
     * Updates an Quote 
     * @description Handles the updating of an Quote by id
     */
    put: operations["updateQuote"];
    /**
     * Deletes a Quote 
     * @description Handles the deletion of an Quote by id
     */
    delete: operations["deleteQuote"];
  };
  "/api/v1/quotes/{id}/edit": {
    /**
     * Shows an Quote for editting 
     * @description Displays an Quote by id
     */
    get: operations["editQuote"];
  };
  "/api/v1/quotes/bulk": {
    /** Performs bulk actions on an array of quotes */
    post: operations["bulkQuotes"];
  };
  "/api/v1/quotes/{id}/{action}": {
    /**
     * Performs a custom action on an Quote 
     * @description Performs a custom action on an Quote.
     * 
     *     The current range of actions are as follows
     *     - clone_to_quote
     *     - history
     *     - delivery_note
     *     - mark_paid
     *     - download
     *     - archive
     *     - delete
     *     - convert
     *     - convert_to_invoice
     *     - email
     */
    get: operations["actionQuote"];
  };
  "/api/v1/quotes/{id}/upload": {
    /**
     * Uploads a document to a quote 
     * @description Handles the uploading of a document to a quote
     */
    put: operations["uploadQuote"];
  };
  "/api/v1/recurring_expenses": {
    /**
     * Gets a list of recurring_expenses 
     * @description Lists recurring_expenses, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the recurring_expenses, these are handled by the RecurringExpenseFilters class which defines the methods available
     */
    get: operations["getRecurringExpenses"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeRecurringExpense"];
  };
  "/api/v1/recurring_expenses/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showRecurringExpense"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateRecurringExpense"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteRecurringExpense"];
  };
  "/api/v1/recurring_expenses/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editRecurringExpense"];
  };
  "/api/v1/recurring_expenses/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getRecurringExpensesCreate"];
  };
  "/api/v1/recurring_expenses/bulk": {
    /** Performs bulk actions on an array of recurring_expenses */
    post: operations["bulkRecurringExpenses"];
  };
  "/api/v1/recurring_expenses/{id}/upload": {
    /**
     * Uploads a document to a recurring_expense 
     * @description Handles the uploading of a document to a recurring_expense
     */
    put: operations["uploadRecurringExpense"];
  };
  "/api/v1/recurring_invoices": {
    /**
     * Gets a list of recurring_invoices 
     * @description Lists recurring_invoices, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the recurring_invoices, these are handled by the RecurringInvoiceFilters class which defines the methods available
     */
    get: operations["getRecurringInvoices"];
    /**
     * Adds a RecurringInvoice 
     * @description Adds an RecurringInvoice to the system
     */
    post: operations["storeRecurringInvoice"];
  };
  "/api/v1/recurring_invoices/create": {
    /**
     * Gets a new blank RecurringInvoice object 
     * @description Returns a blank object with default values
     */
    get: operations["getRecurringInvoicesCreate"];
  };
  "/api/v1/recurring_invoices/{id}": {
    /**
     * Shows an RecurringInvoice 
     * @description Displays an RecurringInvoice by id
     */
    get: operations["showRecurringInvoice"];
    /**
     * Updates an RecurringInvoice 
     * @description Handles the updating of an RecurringInvoice by id
     */
    put: operations["updateRecurringInvoice"];
    /**
     * Deletes a RecurringInvoice 
     * @description Handles the deletion of an RecurringInvoice by id
     */
    delete: operations["deleteRecurringInvoice"];
  };
  "/api/v1/recurring_invoices/{id}/edit": {
    /**
     * Shows an RecurringInvoice for editting 
     * @description Displays an RecurringInvoice by id
     */
    get: operations["editRecurringInvoice"];
  };
  "/api/v1/recurring_invoice/{invitation_key}/download": {
    /**
     * Download a specific invoice by invitation key 
     * @description Downloads a specific invoice
     */
    get: operations["downloadRecurringInvoice"];
  };
  "/api/v1/recurring_invoices/bulk": {
    /** Performs bulk actions on an array of recurring_invoices */
    post: operations["bulkRecurringInvoices"];
  };
  "/api/v1/recurring_invoices/{id}/{action}": {
    /**
     * Performs a custom action on an RecurringInvoice 
     * @description Performs a custom action on an RecurringInvoice.
     * 
     *     The current range of actions are as follows
     *     - clone_to_RecurringInvoice
     *     - clone_to_quote
     *     - history
     *     - delivery_note
     *     - mark_paid
     *     - download
     *     - archive
     *     - delete
     *     - email
     */
    get: operations["actionRecurringInvoice"];
  };
  "/api/v1/recurring_invoices/{id}/upload": {
    /**
     * Uploads a document to a recurring_invoice 
     * @description Handles the uploading of a document to a recurring_invoice
     */
    put: operations["uploadRecurringInvoice"];
  };
  "/api/v1/recurring_quotes": {
    /**
     * Gets a list of recurring_quotes 
     * @description Lists recurring_quotes, search and filters allow fine grained lists to be generated.
     * 
     *         Query parameters can be added to performed more fine grained filtering of the recurring_quotes, these are handled by the RecurringQuoteFilters class which defines the methods available
     */
    get: operations["getRecurringQuotes"];
    /**
     * Adds a RecurringQuote 
     * @description Adds an RecurringQuote to the system
     */
    post: operations["storeRecurringQuote"];
  };
  "/api/v1/recurring_quotes/create": {
    /**
     * Gets a new blank RecurringQuote object 
     * @description Returns a blank object with default values
     */
    get: operations["getRecurringQuotesCreate"];
  };
  "/api/v1/recurring_quotes/{id}": {
    /**
     * Shows an RecurringQuote 
     * @description Displays an RecurringQuote by id
     */
    get: operations["showRecurringQuote"];
    /**
     * Updates an RecurringQuote 
     * @description Handles the updating of an RecurringQuote by id
     */
    put: operations["updateRecurringQuote"];
    /**
     * Deletes a RecurringQuote 
     * @description Handles the deletion of an RecurringQuote by id
     */
    delete: operations["deleteRecurringQuote"];
  };
  "/api/v1/recurring_quotes/{id}/edit": {
    /**
     * Shows an RecurringQuote for editting 
     * @description Displays an RecurringQuote by id
     */
    get: operations["editRecurringQuote"];
  };
  "/api/v1/recurring_quotes/bulk": {
    /** Performs bulk actions on an array of recurring_quotes */
    post: operations["bulkRecurringQuotes"];
  };
  "/api/v1/recurring_quotes/{id}/{action}": {
    /**
     * Performs a custom action on an RecurringQuote 
     * @description Performs a custom action on an RecurringQuote.
     * 
     *     The current range of actions are as follows
     *     - clone_to_RecurringQuote
     *     - clone_to_quote
     *     - history
     *     - delivery_note
     *     - mark_paid
     *     - download
     *     - archive
     *     - delete
     *     - email
     */
    get: operations["actionRecurringQuote"];
  };
  "/api/v1/reports/contacts": {
    /**
     * Contact reports 
     * @description Export contact reports
     */
    post: operations["getContactReport"];
  };
  "/api/v1/reports/clients": {
    /**
     * Client reports 
     * @description Export client reports
     */
    post: operations["getClientReport"];
  };
  "/api/v1/reports/credit": {
    /**
     * Credit reports 
     * @description Export credit reports
     */
    post: operations["getCreditReport"];
  };
  "/api/v1/reports/documents": {
    /**
     * Document reports 
     * @description Export document reports
     */
    post: operations["getDocumentReport"];
  };
  "/api/v1/reports/expense": {
    /**
     * Expense reports 
     * @description Export expense reports
     */
    post: operations["getExpenseReport"];
  };
  "/api/v1/reports/invoice_items": {
    /**
     * Invoice item reports 
     * @description Export invoice item reports
     */
    post: operations["getInvoiceItemReport"];
  };
  "/api/v1/reports/invoices": {
    /**
     * Invoice reports 
     * @description Export invoice reports
     */
    post: operations["getInvoiceReport"];
  };
  "/api/v1/reports/payments": {
    /**
     * Payment reports 
     * @description Export payment reports
     */
    post: operations["getPaymentReport"];
  };
  "/api/v1/reports/products": {
    /**
     * Product reports 
     * @description Export product reports
     */
    post: operations["getProductReport"];
  };
  "/api/v1/reports/product_sales": {
    /**
     * Product Salesreports 
     * @description Export product sales reports
     */
    post: operations["getProductSalesReport"];
  };
  "/api/v1/reports/profitloss": {
    /**
     * Profit loss reports 
     * @description Profit loss report
     */
    post: operations["getProfitLossReport"];
  };
  "/api/v1/reports/quote_items": {
    /**
     * Quote item reports 
     * @description Export Quote item reports
     */
    post: operations["getQuoteItemReport"];
  };
  "/api/v1/reports/quotes": {
    /**
     * Quote reports 
     * @description Export quote reports
     */
    post: operations["getQuoteReport"];
  };
  "/api/v1/reports/recurring_invoices": {
    /**
     * Recurring Invoice reports 
     * @description Export recurring invoice reports
     */
    post: operations["getRecurringInvoiceReport"];
  };
  "/api/v1/reports/tasks": {
    /**
     * Task reports 
     * @description Export task reports
     */
    post: operations["getTaskReport"];
  };
  "/api/v1/self-update": {
    /**
     * Performs a system update 
     * @description Performs a system update
     */
    post: operations["selfUpdate"];
  };
  "/api/v1/statics": {
    /**
     * Gets a list of statics 
     * @description Lists all statics
     */
    get: operations["getStatics"];
  };
  "/api/v1/subscriptions": {
    /**
     * Gets a list of subscriptions 
     * @description Lists subscriptions.
     */
    get: operations["getSubscriptions"];
    /**
     * Adds a subscriptions 
     * @description Adds an subscriptions to the system
     */
    post: operations["storeSubscription"];
  };
  "/api/v1/subscriptions/create": {
    /**
     * Gets a new blank subscriptions object 
     * @description Returns a blank object with default values
     */
    get: operations["getSubscriptionsCreate"];
  };
  "/api/v1/subscriptions/{id}": {
    /**
     * Shows an subscriptions 
     * @description Displays an subscriptions by id
     */
    get: operations["showSubscription"];
    /**
     * Updates an subscriptions 
     * @description Handles the updating of an subscriptions by id
     */
    put: operations["updateSubscription"];
    /**
     * Deletes a subscriptions 
     * @description Handles the deletion of an subscriptions by id
     */
    delete: operations["deleteSubscription"];
  };
  "/api/v1/subscriptions/{id}/edit": {
    /**
     * Shows an subscriptions for editting 
     * @description Displays an subscriptions by id
     */
    get: operations["editSubscription"];
  };
  "/api/v1/subscriptions/bulk": {
    /** Performs bulk actions on an array of subscriptions */
    post: operations["bulkSubscriptions"];
  };
  "/api/v1/support/messages/send": {
    /**
     * Sends a support message to Invoice Ninja team 
     * @description Allows a user to send a support message to the Invoice Ninja Team
     */
    post: operations["supportMessage"];
  };
  "/api/v1/system_logs": {
    /**
     * Gets a list of system logs 
     * @description Lists system logs, search and filters allow fine grained lists to be generated.
     *      *
     *      *      Query parameters can be added to performed more fine grained filtering of the system logs, these are handled by the SystemLogFilters class which defines the methods available
     */
    get: operations["getSystemLogs"];
  };
  "/api/v1/system_logs/{id}": {
    /**
     * Shows a system_logs 
     * @description Displays a system_logs by id
     */
    get: operations["showSystemLogs"];
  };
  "/api/v1/tasks": {
    /**
     * Gets a list of tasks 
     * @description Lists tasks, search and filters allow fine grained lists to be generated.
     *      *
     *      *   Query parameters can be added to performed more fine grained filtering of the tasks, these are handled by the TaskFilters class which defines the methods available
     */
    get: operations["getTasks"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeTask"];
  };
  "/api/v1/tasks/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showTask"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateTask"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteTask"];
  };
  "/api/v1/tasks/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editTask"];
  };
  "/api/v1/tasks/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getTasksCreate"];
  };
  "/api/v1/tasks/bulk": {
    /** Performs bulk actions on an array of tasks */
    post: operations["bulkTasks"];
  };
  "/api/v1/tasks/{id}/upload": {
    /**
     * Uploads a document to a task 
     * @description Handles the uploading of a document to a task
     */
    put: operations["uploadTask"];
  };
  "/api/v1/tasks/stort": {
    /**
     * Sort tasks on KanBan 
     * @description Sorts tasks after drag and drop on the KanBan.
     */
    post: operations["sortTasks"];
  };
  "/api/v1/task_schedulers/": {
    /**
     * Task Scheduler Index 
     * @description Get all schedulers with associated jobs
     */
    get: operations["getTaskSchedulers"];
    /**
     * Create task scheduler with job  
     * @description Create task scheduler with a job (action(job) request should be sent via request also. Example: We want client report to be job which will be run
     *      * multiple times, we should send the same parameters in the request as we would send if we wanted to get report, see example
     */
    post: operations["createTaskScheduler"];
  };
  "/api/v1/invoices/task_schedulers": {
    /**
     * Gets a new blank scheduler object 
     * @description Returns a blank object with default values
     */
    get: operations["getTaskScheduler"];
  };
  "/api/v1/task_schedulers/{id}": {
    /**
     * Show given scheduler 
     * @description Get scheduler with associated job
     */
    get: operations["showTaskScheduler"];
    /**
     * Update task scheduler  
     * @description Update task scheduler
     */
    put: operations["updateTaskScheduler"];
    /**
     * Destroy Task Scheduler 
     * @description Destroy task scheduler and its associated job
     */
    delete: operations["destroyTaskScheduler"];
  };
  "/api/v1/task_schedulers/bulk": {
    /** Performs bulk actions on an array of task_schedulers */
    post: operations["bulkTaskSchedulerActions"];
  };
  "/api/v1/task_statuses": {
    /**
     * Gets a list of task statuses 
     * @description Lists task statuses
     */
    get: operations["getTaskStatuses"];
    /**
     * Adds a TaskStatus 
     * @description Adds a TaskStatusto the system
     */
    post: operations["storeTaskStatus"];
  };
  "/api/v1/task_statuses/create": {
    /**
     * Gets a new blank TaskStatus object 
     * @description Returns a blank object with default values
     */
    get: operations["getTaskStatussCreate"];
  };
  "/api/v1/task_statuses/{id}": {
    /**
     * Shows a TaskStatus Term 
     * @description Displays an TaskStatusby id
     */
    get: operations["showTaskStatus"];
    /**
     * Updates a TaskStatus Term 
     * @description Handles the updating of an TaskStatus Termby id
     */
    put: operations["updateTaskStatus"];
    /**
     * Deletes a TaskStatus Term 
     * @description Handles the deletion of an TaskStatus by id
     */
    delete: operations["deleteTaskStatus"];
  };
  "/api/v1/task_statuses/{id}/edit": {
    /**
     * Shows an TaskStatusfor editting 
     * @description Displays an TaskStatusby id
     */
    get: operations["editTaskStatuss"];
  };
  "/api/v1/task_statuses/bulk": {
    /** Performs bulk actions on an array of task statuses */
    post: operations["bulkTaskStatuss"];
  };
  "/api/v1/tax_rates": {
    /**
     * Gets a list of tax_rates 
     * @description Lists tax rates
     */
    get: operations["getTaxRates"];
  };
  "/api/v1/tax_rates/create": {
    /**
     * Gets a new blank Tax Rate object 
     * @description Returns a blank object with default values
     */
    get: operations["getTaxRateCreate"];
  };
  "/api/v1/tax_rates/{id}": {
    /**
     * Shows a Tax Rate 
     * @description Displays an TaxRate by id
     */
    get: operations["showTaxRate"];
    /**
     * Updates a tax rate 
     * @description Handles the updating of a tax rate by id
     */
    put: operations["updateTaxRate"];
    /**
     * Deletes a TaxRate 
     * @description Handles the deletion of an TaxRate by id
     */
    delete: operations["deleteTaxRate"];
  };
  "/api/v1/tax_rates/{id}/edit": {
    /**
     * Shows a Tax Rate for editting 
     * @description Displays a Tax Rate by id
     */
    get: operations["editTaxRate"];
  };
  "/api/v1/tax_rates/bulk": {
    /** Performs bulk actions on an array of TaxRates */
    post: operations["bulkTaxRates"];
  };
  "/api/v1/templates": {
    /**
     * Returns a entity template with the template variables replaced with the Entities 
     * @description Returns a entity template with the template variables replaced with the Entities
     */
    post: operations["getShowTemplate"];
  };
  "/api/v1/tokens": {
    /**
     * Gets a list of company tokens 
     * @description Lists company tokens.
     *      *
     *      *   Query parameters can be added to performed more fine grained filtering of the tokens, these are handled by the TokenFilters class which defines the methods available
     */
    get: operations["getTokens"];
    /**
     * Adds a token 
     * @description Adds an token to a company
     */
    post: operations["storeToken"];
  };
  "/api/v1/tokens/{id}": {
    /**
     * Shows a token 
     * @description Displays a token by id
     */
    get: operations["showToken"];
    /**
     * Updates a token 
     * @description Handles the updating of a token by id
     */
    put: operations["updateToken"];
    /**
     * Deletes a token 
     * @description Handles the deletion of a token by id
     */
    delete: operations["deleteToken"];
  };
  "/api/v1/tokens/{id}/edit": {
    /**
     * Shows a token for editting 
     * @description Displays a token by id
     */
    get: operations["editToken"];
  };
  "/api/v1/tokens/create": {
    /**
     * Gets a new blank token object 
     * @description Returns a blank object with default values
     */
    get: operations["getTokensCreate"];
  };
  "/api/v1/tokens/bulk": {
    /** Performs bulk actions on an array of tokens */
    post: operations["bulkTokens"];
  };
  "/api/v1/users": {
    /**
     * Gets a list of users 
     * @description Lists users, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the users, these are handled by the UserFilters class which defines the methods available
     */
    get: operations["getUsers"];
    /**
     * Adds a User 
     * @description Adds an User to the system
     */
    post: operations["storeUser"];
  };
  "/api/v1/users/create": {
    /**
     * Gets a new blank User object 
     * @description Returns a blank object with default values
     */
    get: operations["getUsersCreate"];
  };
  "/api/v1/users/{id}": {
    /**
     * Shows an User 
     * @description Displays an User by id
     */
    get: operations["showUser"];
    /**
     * Updates an User 
     * @description Handles the updating of an User by id
     */
    put: operations["updateUser"];
    /**
     * Deletes a User 
     * @description Handles the deletion of an User by id
     */
    delete: operations["deleteUser"];
  };
  "/api/v1/users/{id}/edit": {
    /**
     * Shows an User for editting 
     * @description Displays an User by id
     */
    get: operations["editUser"];
  };
  "/api/v1/users/bulk": {
    /** Performs bulk actions on an array of users */
    post: operations["bulkUsers"];
  };
  "/api/v1/users/{user}/detach_from_company": {
    /**
     * Detach an existing user to a company 
     * @description Detach an existing user from a company
     */
    delete: operations["detachUser"];
  };
  "/api/v1/users/{user}/invite": {
    /**
     * Reconfirm an existing user to a company 
     * @description Reconfirm an existing user from a company
     */
    post: operations["inviteUser"];
  };
  "/api/v1/users/{user}/reconfirm": {
    /**
     * Reconfirm an existing user to a company 
     * @description Reconfirm an existing user from a company
     */
    post: operations["inviteUserReconfirm"];
  };
  "/api/v1/vendors": {
    /**
     * Gets a list of vendors 
     * @description Lists vendors, search and filters allow fine grained lists to be generated.
     * 
     *     Query parameters can be added to performed more fine grained filtering of the vendors, these are handled by the VendorFilters class which defines the methods available
     */
    get: operations["getVendors"];
    /**
     * Adds a client 
     * @description Adds an client to a company
     */
    post: operations["storeVendor"];
  };
  "/api/v1/vendors/{id}": {
    /**
     * Shows a client 
     * @description Displays a client by id
     */
    get: operations["showVendor"];
    /**
     * Updates a client 
     * @description Handles the updating of a client by id
     */
    put: operations["updateVendor"];
    /**
     * Deletes a client 
     * @description Handles the deletion of a client by id
     */
    delete: operations["deleteVendor"];
  };
  "/api/v1/vendors/{id}/edit": {
    /**
     * Shows a client for editting 
     * @description Displays a client by id
     */
    get: operations["editVendor"];
  };
  "/api/v1/vendors/create": {
    /**
     * Gets a new blank client object 
     * @description Returns a blank object with default values
     */
    get: operations["getVendorsCreate"];
  };
  "/api/v1/vendors/bulk": {
    /** Performs bulk actions on an array of vendors */
    post: operations["bulkVendors"];
  };
  "/api/v1/vendors/{id}/upload": {
    /**
     * Uploads a document to a vendor 
     * @description Handles the uploading of a document to a vendor
     */
    put: operations["uploadVendor"];
  };
  "/api/v1/webcron": {
    /**
     * Executes the task scheduler via a webcron service 
     * @description Executes the task scheduler via a webcron service
     */
    get: operations["webcron"];
  };
  "/api/v1/webhooks": {
    /**
     * Gets a list of Webhooks 
     * @description Lists Webhooks, search and filters allow fine grained lists to be generated.
     *      *
     *      *      Query parameters can be added to performed more fine grained filtering of the Webhooks, these are handled by the WebhookFilters class which defines the methods available
     */
    get: operations["getWebhooks"];
    /**
     * Adds a Webhook 
     * @description Adds an Webhook to a company
     */
    post: operations["storeWebhook"];
  };
  "/api/v1/webhooks/{id}": {
    /**
     * Shows a Webhook 
     * @description Displays a Webhook by id
     */
    get: operations["showWebhook"];
    /**
     * Updates a Webhook 
     * @description Handles the updating of a Webhook by id
     */
    put: operations["updateWebhook"];
    /**
     * Deletes a Webhook 
     * @description Handles the deletion of a Webhook by id
     */
    delete: operations["deleteWebhook"];
  };
  "/api/v1/webhooks/{id}/edit": {
    /**
     * Shows a Webhook for editting 
     * @description Displays a Webhook by id
     */
    get: operations["editWebhook"];
  };
  "/api/v1/webhooks/create": {
    /**
     * Gets a new blank Webhook object 
     * @description Returns a blank object with default values
     */
    get: operations["getWebhooksCreate"];
  };
  "/api/v1/webhooks/bulk": {
    /** Performs bulk actions on an array of Webhooks */
    post: operations["bulkWebhooks"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Account: {
      /**
       * @description The account hashed id 
       * @example AS3df3A
       */
      id?: string;
    };
    Activity: {
      /**
       * @description The id field of the activity 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The activity type id 
       * @example Opnel5aKBz
       */
      activity_type_id?: string;
      /**
       * @description The client hashed id 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The company hashed id 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The invoice hashed id 
       * @example Opnel5aKBz
       */
      invoice_id?: string;
      /**
       * @description The payment hashed id 
       * @example Opnel5aKBz
       */
      payment_id?: string;
      /**
       * @description The credit hashed id 
       * @example Opnel5aKBz
       */
      credit_id?: string;
      /**
       * @description Unixtimestamp the last time the record was updated 
       * @example 343421434
       */
      updated_at?: number;
      /**
       * @description The expense hashed id 
       * @example Opnel5aKBz
       */
      expense_id?: string;
      /**
       * @description Defines is the activity was performed by the system 
       * @example true
       */
      is_system?: boolean;
      /**
       * @description The contact hashed id 
       * @example Opnel5aKBz
       */
      contact_id?: string;
      /**
       * @description The task hashed id 
       * @example Opnel5aKBz
       */
      task_id?: string;
      /**
       * @description Activity Notes 
       * @example Opnel5aKBz
       */
      notes?: string;
      /**
       * @description The hashed ID of the token who performed the action 
       * @example Opnel5aKBz
       */
      token_id?: string;
      /**
       * @description The IP Address of the user who performed the action 
       * @example 192.168.1.252
       */
      ip?: string;
    };
    BTRules: {
      /**
       * @description The key to search 
       * @example description,amount
       */
      data_key?: string;
      /**
       * @description The operator flag of the search 
       * @example >
       */
      operator?: string;
      /**
       * @description The value to search for 
       * @example bob
       */
      value?: string;
    };
    BankIntegration: {
      /**
       * @description The bank integration hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The company hashed id 
       * @example AS3df3A
       */
      company_id?: string;
      /**
       * @description The user hashed id 
       * @example AS3df3A
       */
      user_id?: string;
      /**
       * @description The providers bank name 
       * @example Chase Bank
       */
      provider_bank_name?: string;
      /**
       * @description The bank account id 
       * @example 1233434
       */
      bank_account_id?: number;
      /**
       * @description The name of the account 
       * @example My Checking Acc
       */
      bank_account_name?: string;
      /**
       * @description The account number 
       * @example 111 234 2332
       */
      bank_account_number?: string;
      /**
       * @description The status of the bank account 
       * @example ACTIVE
       */
      bank_account_status?: string;
      /**
       * @description The type of account 
       * @example CREDITCARD
       */
      bank_account_type?: string;
      /**
       * @description The current bank balance if available 
       * @example 1000000
       */
      balance?: number;
      /**
       * @description iso_3166_3 code 
       * @example USD
       */
      currency?: string;
    };
    BankTransaction: {
      /**
       * @description The bank integration hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The company hashed id 
       * @example AS3df3A
       */
      company_id?: string;
      /**
       * @description The user hashed id 
       * @example AS3df3A
       */
      user_id?: string;
      /**
       * @description The id of the transaction rule 
       * @example 343434
       */
      transaction_id?: number;
      /**
       * @description The transaction amount 
       * @example 10
       */
      amount?: number;
      /**
       * @description The currency ID of the currency 
       * @example 1
       */
      currency_id?: string;
      /**
       * @description The account type 
       * @example creditCard
       */
      account_type?: string;
      /**
       * @description The description of the transaction 
       * @example Potato purchases for kevin
       */
      description?: string;
      /**
       * @description The category id 
       * @example 1
       */
      category_id?: number;
      /**
       * @description The category description 
       * @example Expenses
       */
      category_type?: string;
      /**
       * @description Either CREDIT or DEBIT 
       * @example CREDIT
       */
      base_type?: string;
      /**
       * @description The date of the transaction 
       * @example 2022-09-01
       */
      date?: string;
      /**
       * @description The ID number of the bank account 
       * @example 1
       */
      bank_account_id?: number;
    };
    BankTransactionRule: {
      /**
       * @description The bank transaction rules hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The company hashed id 
       * @example AS3df3A
       */
      company_id?: string;
      /**
       * @description The user hashed id 
       * @example AS3df3A
       */
      user_id?: string;
      /**
       * @description The name of the transaction 
       * @example Rule 1
       */
      name?: string;
      /** @description A mapped collection of the sub rules for the BankTransactionRule */
      rules?: (components["schemas"]["BTRules"])[];
      /**
       * @description Flags whether the rule converts the transaction automatically 
       * @example true
       */
      auto_convert?: boolean;
      /**
       * @description Flags whether all subrules are required for the match 
       * @example true
       */
      matches_on_all?: boolean;
      /**
       * @description Flags whether the rule applies to a CREDIT or DEBIT 
       * @example CREDIT
       */
      applies_to?: string;
      /**
       * @description The client hashed id 
       * @example AS3df3A
       */
      client_id?: string;
      /**
       * @description The vendor hashed id 
       * @example AS3df3A
       */
      vendor_id?: string;
      /**
       * @description The category hashed id 
       * @example AS3df3A
       */
      category_id?: string;
    };
    Subscription: {
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      product_id?: string;
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      recurring_invoice_id?: string;
      /**
       * @description ______ 
       * @example true
       */
      is_recurring?: boolean;
      /**
       * @description integer const representation of the frequency 
       * @example 1
       */
      frequency_id?: string;
      /**
       * @description enum setting 
       * @example always
       */
      auto_bill?: string;
      /**
       * @description ______ 
       * @example PROMOCODE4U
       */
      promo_code?: string;
      /**
       * @description ______ 
       * @example 10
       */
      promo_discount?: number;
      /**
       * @description ______ 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description ______ 
       * @example true
       */
      allow_cancellation?: boolean;
      /**
       * @description ______ 
       * @example true
       */
      per_seat_enabled?: boolean;
      /**
       * @description ______ 
       * @example 1
       */
      currency_id?: number;
      /**
       * @description ______ 
       * @example 100
       */
      max_seats_limit?: number;
      /**
       * @description ______ 
       * @example true
       */
      trial_enabled?: boolean;
      /**
       * @description ______ 
       * @example 2
       */
      trial_duration?: number;
      /**
       * @description ______ 
       * @example true
       */
      allow_query_overrides?: boolean;
      /**
       * @description ______ 
       * @example true
       */
      allow_plan_changes?: boolean;
      /**
       * @description ______ 
       * @example 2
       */
      refund_period?: number;
      /**
       * @description ______ 
       * @example 2
       */
      webhook_configuration?: string;
      /**
       * @description ______ 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
    };
    BulkAction: (number)[];
    ClientContact: {
      /**
       * @description The hashed if of the contact 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user who created the contact 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The hashed id of the client 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The first name of the contact 
       * @example John
       */
      first_name?: string;
      /**
       * @description The last name of the contact 
       * @example Doe
       */
      last_name?: string;
      /**
       * @description The phone number of the contact 
       * @example 555-152-4524
       */
      phone?: string;
      /**
       * @description A Custom field value 
       * @example
       */
      custom_value1?: string;
      /**
       * @description A Custom field value 
       * @example
       */
      custom_value2?: string;
      /**
       * @description A Custom field value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A Custom field value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The email of the contact 
       * @example
       */
      email?: string;
      /**
       * @description The terms of service which the contact has accpeted 
       * @example A long set of ToS
       */
      accepted_terms_version?: string;
      /**
       * @description The hashed password of the contact 
       * @example *****
       */
      password?: string;
      /**
       * @description The confirmation code used to authenticate the contacts email address 
       * @example 333-sdjkh34gbasd
       */
      "confirmation-code"?: string;
      /**
       * @description A uuid based token. 
       * @example 333-sdjkh34gbasd
       */
      token?: string;
      /**
       * @description Defines is this contact is the primary contact for the client 
       * @example true
       */
      is_primary?: boolean;
      /**
       * @description Boolean value confirms the user has confirmed their account. 
       * @example true
       */
      confirmed?: boolean;
      /**
       * @description Boolean value defines if the contact has been locked out. 
       * @example true
       */
      is_locked?: boolean;
      /**
       * @description Boolean value determines is this contact should receive emails 
       * @example true
       */
      send_email?: boolean;
      /**
       * Format: integer 
       * @description The number of failed logins the contact has had 
       * @example 3
       */
      failed_logins?: number;
      /**
       * Format: integer 
       * @description The date which the contact confirmed their email 
       * @example 134341234234
       */
      email_verified_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      last_login?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      deleted_at?: number;
    };
    ClientGatewayToken: {
      /**
       * @description The hashed id of the client gateway token 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the company 
       * @example 2
       */
      company_id?: string;
      /**
       * @description The hashed_id of the client 
       * @example 2
       */
      client_id?: string;
      /**
       * @description The payment token 
       * @example 2
       */
      token?: string;
      /**
       * @description THe bank account routing number 
       * @example 2
       */
      routing_number?: string;
      /**
       * @description The hashed id of the company gateway 
       * @example 2
       */
      company_gateway_id?: string;
      /**
       * @description Flag determining if the token is the default payment method 
       * @example true
       */
      is_default?: boolean;
    };
    Client: {
      /**
       * @description The hashed id of the client 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user 
       * @example
       */
      user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example
       */
      company_id?: string;
      contacts?: (components["schemas"]["ClientContact"])[];
      /**
       * @description The client name 
       * @example Jims housekeeping
       */
      name?: string;
      /**
       * @description The client website 
       * @example www.jims.com
       */
      website?: string;
      /**
       * @description Private notes on the client 
       * @example These are very private notes
       */
      private_notes?: string;
      /**
       * @description The client hash 
       * @example asdfkjhk342hjhbfdvmnfb1
       */
      client_hash?: string;
      /**
       * @description The industry id of the client 
       * @example 5
       */
      industry_id?: number;
      /**
       * @description The size id of the client 
       * @example 2
       */
      size_id?: number;
      /**
       * @description Address line 1 
       * @example
       */
      address1?: string;
      /**
       * @description Address line 2 
       * @example
       */
      address2?: string;
      /**
       * @description City 
       * @example Beverley Hills
       */
      city?: string;
      /**
       * @description State/Locality 
       * @example Californnia
       */
      state?: string;
      /**
       * @description Zip / Postal code 
       * @example 90210
       */
      postal_code?: string;
      /**
       * @description The client phone number 
       * @example 555-3434-3434
       */
      phone?: string;
      /**
       * Format: integer 
       * @description The client country id 
       * @example 1
       */
      country_id?: number;
      /**
       * @description A custom value 
       * @example Something custom
       */
      custom_value1?: string;
      /**
       * @description A custom value 
       * @example 2002-01-01
       */
      custom_value2?: string;
      /**
       * @description A custom value 
       * @example Something custom
       */
      custom_value3?: string;
      /**
       * @description A custom value 
       * @example Something custom
       */
      custom_value4?: string;
      /**
       * @description The client VAT number 
       * @example VAT123
       */
      vat_number?: string;
      /**
       * @description  The client id number 
       * @example CLIENT_ID_NUMBER
       */
      id_number?: string;
      /**
       * @description The client number - assigned by the system typically 
       * @example
       */
      number?: string;
      /**
       * @description The shipping address line 1 
       * @example 5 Wallaby Way
       */
      shipping_address1?: string;
      /**
       * @description The shipping address line 2 
       * @example Suite 5
       */
      shipping_address2?: string;
      /**
       * @description The shipping city 
       * @example Perth
       */
      shipping_city?: string;
      /**
       * @description The shipping state 
       * @example Western Australia
       */
      shipping_state?: string;
      /**
       * @description The shipping postal code 
       * @example 6110
       */
      shipping_postal_code?: string;
      /**
       * Format: integer 
       * @description The shipping country id 
       * @example 4
       */
      shipping_country_id?: number;
      /**
       * @description Boolean flagged determining if the client has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: float 
       * @description The client balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount the client has paid to date. 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description An amount which is available to the client for future use. 
       * @example 10.00
       */
      credit_balance?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      last_login?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      settings?: components["schemas"]["CompanySettings"];
    };
    CompanyGateway: {
      /**
       * @description The hashed id of the company gateway 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The company hashed id 
       * @example 2
       */
      company_id?: string;
      /**
       * @description The gateway key (hash) 
       * @example 2
       */
      gateway_key?: string;
      /**
       * @description Bitmask representation of cards 
       * @example 32
       */
      accepted_credit_cards?: number;
      /**
       * @description Determines if the the billing address is required prior to payment. 
       * @example true
       */
      require_billing_address?: boolean;
      /**
       * @description Determines if the the billing address is required prior to payment. 
       * @example true
       */
      require_shipping_address?: boolean;
      /**
       * @description The configuration map for the gateway 
       * @example dfadsfdsafsafd
       */
      config?: string;
      /**
       * @description Determines if the client details should be updated. 
       * @example true
       */
      update_details?: boolean;
      /** @description A mapped collection of the fees and limits for the configured gateway */
      fees_and_limits?: (components["schemas"]["FeesAndLimits"])[];
    };
    CompanyLedger: {
      /**
       * @description This field will reference one of the following entity hashed ID payment_id, invoice_id or credit_id 
       * @example AS3df3A
       */
      entity_id?: string;
      /**
       * @description The notes which reference this entry of the ledger 
       * @example Credit note for invoice #3212
       */
      notes?: string;
      /**
       * Format: float 
       * @description The client balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount the client balance is adjusted by 
       * @example 10.00
       */
      adjustment?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      created_at?: number;
    };
    Company: {
      /**
       * @description The company hash id 
       * @example WJxbojagwO
       */
      id?: string;
      /**
       * @description The company size ID 
       * @example 1
       */
      size_id?: string;
      /**
       * @description The company industry ID 
       * @example 1
       */
      industry_id?: string;
      /**
       * @description The slack webhook notification URL 
       * @example https://slack.com/sh328sj
       */
      slack_webhook_url?: string;
      /**
       * @description The google analytics key 
       * @example 1
       */
      google_analytics_key?: string;
      /**
       * @description Determines the client facing urls ie: subdomain,domain,iframe 
       * @example subdomain
       */
      portal_mode?: string;
      /**
       * @description Specifies the first part of the company domain ie acme in acme.domain.com 
       * @example aceme
       */
      subdomain?: string;
      /**
       * @description The fully qualified domain for client facing URLS 
       * @example https://subdomain.invoicing.co
       */
      portal_domain?: string;
      /**
       * @description Number of taxes rates used per entity 
       * @example 1
       */
      enabled_tax_rates?: number;
      /**
       * @description Toggles filling a product description based on product key 
       * @example true
       */
      fill_products?: boolean;
      /**
       * @description ___________ 
       * @example true
       */
      convert_products?: boolean;
      /**
       * @description Toggles updating a product description which description changes 
       * @example true
       */
      update_products?: boolean;
      /**
       * @description Toggles showing a product description which description changes 
       * @example true
       */
      show_product_details?: boolean;
      /** @description Custom fields map */
      custom_fields?: Record<string, never>;
      /**
       * @description Show/Hide the product cost field in the UI 
       * @example true
       */
      enable_product_cost?: boolean;
      /**
       * @description Show/hide the product quantity field (used in the UI to show the default quantity) 
       * @example true
       */
      enable_product_quantity?: boolean;
      /**
       * @description Enable/Disable whether to use a default quantity 
       * @example true
       */
      default_quantity?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_taxes1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_taxes2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_taxes3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_taxes4?: boolean;
      /**
       * @description The company logo - binary 
       * @example logo.png
       */
      logo?: Record<string, never>;
      settings?: components["schemas"]["CompanySettings"];
    };
    CompanySettings: {
      /**
       * @description The timezone id 
       * @example 15
       */
      timezone_id?: string;
      /**
       * @description The date format id 
       * @example 15
       */
      date_format_id?: string;
      /**
       * @description Toggles 12/24 hour time 
       * @example true
       */
      military_time?: boolean;
      /**
       * @description The language id 
       * @example 1
       */
      language_id?: string;
      /**
       * @description Toggles whether the currency symbol or code is shown 
       * @example true
       */
      show_currency_code?: boolean;
      /**
       * @description The default currency id 
       * @example true
       */
      currency_id?: string;
      /**
       * @description -1 sets no payment term, 0 sets payment due immediately, positive integers indicates payment terms in days 
       * @example 1
       */
      payment_terms?: number;
      /**
       * @description A commad separate list of available gateways 
       * @example 1,2,3,4
       */
      company_gateway_ids?: string;
      /**
       * @description A Custom Label 
       * @example Custom Label
       */
      custom_value1?: string;
      /**
       * @description A Custom Label 
       * @example Custom Label
       */
      custom_value2?: string;
      /**
       * @description A Custom Label 
       * @example Custom Label
       */
      custom_value3?: string;
      /**
       * @description A Custom Label 
       * @example Custom Label
       */
      custom_value4?: string;
      /**
       * Format: float 
       * @description The default task rate 
       * @example 10.00
       */
      default_task_rate?: number;
      /**
       * @description Toggles whether reminders are sent 
       * @example true
       */
      send_reminders?: boolean;
      /**
       * @description Show/hide the tasks panel in the client portal 
       * @example true
       */
      enable_client_portal_tasks?: boolean;
      /**
       * @description options include plain,light,dark,custom 
       * @example light
       */
      email_style?: string;
      /**
       * @description The reply to email address 
       * @example email@gmail.com
       */
      reply_to_email?: string;
      /**
       * @description A comma separate list of BCC emails 
       * @example email@gmail.com, contact@gmail.com
       */
      bcc_email?: string;
      /**
       * @description Toggles whether to attach PDF as attachment 
       * @example true
       */
      pdf_email_attachment?: boolean;
      /**
       * @description Toggles whether to attach UBL as attachment 
       * @example true
       */
      ubl_email_attachment?: boolean;
      /**
       * @description The custom template 
       * @example <HTML></HTML>
       */
      email_style_custom?: string;
      /**
       * @description enum when the invoice number counter is set, ie when_saved, when_sent, when_paid 
       * @example when_sent
       */
      counter_number_applied?: string;
      /**
       * @description enum when the quote number counter is set, ie when_saved, when_sent 
       * @example when_sent
       */
      quote_number_applied?: string;
      /**
       * @description A custom message which is displayed on the dashboard 
       * @example Please pay invoices immediately
       */
      custom_message_dashboard?: string;
      /**
       * @description A custom message which is displayed in the client portal when a client is viewing a unpaid invoice. 
       * @example Please pay invoices immediately
       */
      custom_message_unpaid_invoice?: string;
      /**
       * @description A custom message which is displayed in the client portal when a client is viewing a paid invoice. 
       * @example Thanks for paying this invoice!
       */
      custom_message_paid_invoice?: string;
      /**
       * @description A custom message which is displayed in the client portal when a client is viewing a unapproved quote. 
       * @example Please approve quote
       */
      custom_message_unapproved_quote?: string;
      /**
       * @description Toggles whether invoices are locked once sent and cannot be modified further 
       * @example true
       */
      lock_invoices?: boolean;
      /**
       * @description Toggles whether a invoice is archived immediately following payment 
       * @example true
       */
      auto_archive_invoice?: boolean;
      /**
       * @description Toggles whether a quote is archived after being converted to a invoice 
       * @example true
       */
      auto_archive_quote?: boolean;
      /**
       * @description Toggles whether a quote is converted to a invoice when approved 
       * @example true
       */
      auto_convert_quote?: boolean;
      /**
       * @description Boolean flag determining whether inclusive or exclusive taxes are used 
       * @example true
       */
      inclusive_taxes?: boolean;
      /**
       * @description JSON payload of customized translations 
       * @example
       */
      translations?: Record<string, never>;
      /**
       * @description Allows customisation of the task number pattern 
       * @example {$year}-{$counter}
       */
      task_number_pattern?: string;
      /**
       * @description The incrementing counter for tasks 
       * @example 1
       */
      task_number_counter?: number;
      /**
       * @description Time from UTC +0 when the email will be sent to the client 
       * @example 32400
       */
      reminder_send_time?: number;
      /**
       * @description Allows customisation of the expense number pattern 
       * @example {$year}-{$counter}
       */
      expense_number_pattern?: string;
      /**
       * @description The incrementing counter for expenses 
       * @example 1
       */
      expense_number_counter?: number;
      /**
       * @description Allows customisation of the vendor number pattern 
       * @example {$year}-{$counter}
       */
      vendor_number_pattern?: string;
      /**
       * @description The incrementing counter for vendors 
       * @example 1
       */
      vendor_number_counter?: number;
      /**
       * @description Allows customisation of the ticket number pattern 
       * @example {$year}-{$counter}
       */
      ticket_number_pattern?: string;
      /**
       * @description The incrementing counter for tickets 
       * @example 1
       */
      ticket_number_counter?: number;
      /**
       * @description Allows customisation of the payment number pattern 
       * @example {$year}-{$counter}
       */
      payment_number_pattern?: string;
      /**
       * @description The incrementing counter for payments 
       * @example 1
       */
      payment_number_counter?: number;
      /**
       * @description Allows customisation of the invoice number pattern 
       * @example {$year}-{$counter}
       */
      invoice_number_pattern?: string;
      /**
       * @description The incrementing counter for invoices 
       * @example 1
       */
      invoice_number_counter?: number;
      /**
       * @description Allows customisation of the quote number pattern 
       * @example {$year}-{$counter}
       */
      quote_number_pattern?: string;
      /**
       * @description The incrementing counter for quotes 
       * @example 1
       */
      quote_number_counter?: number;
      /**
       * @description Allows customisation of the client number pattern 
       * @example {$year}-{$counter}
       */
      client_number_pattern?: string;
      /**
       * @description The incrementing counter for clients 
       * @example 1
       */
      client_number_counter?: number;
      /**
       * @description Allows customisation of the credit number pattern 
       * @example {$year}-{$counter}
       */
      credit_number_pattern?: string;
      /**
       * @description The incrementing counter for credits 
       * @example 1
       */
      credit_number_counter?: number;
      /**
       * @description This string is prepended to the recurring invoice number 
       * @example R
       */
      recurring_invoice_number_prefix?: string;
      /**
       * @description CONSTANT which is used to apply the frequency which the counters are reset 
       * @example 1
       */
      reset_counter_frequency_id?: number;
      /**
       * @description The explicit date which is used to reset counters 
       * @example 2019-01-01
       */
      reset_counter_date?: string;
      /**
       * @description Pads the counter with leading zeros 
       * @example 1
       */
      counter_padding?: number;
      /**
       * @description Flags whether to share the counter for invoices and quotes 
       * @example true
       */
      shared_invoice_quote_counter?: boolean;
      /**
       * @description Determines if client fields are updated from third party APIs 
       * @example true
       */
      update_products?: boolean;
      /** @example true */
      convert_products?: boolean;
      /**
       * @description Automatically fill products based on product_key 
       * @example true
       */
      fill_products?: boolean;
      /**
       * @description The default invoice terms 
       * @example Invoice Terms are...
       */
      invoice_terms?: string;
      /**
       * @description The default quote terms 
       * @example Quote Terms are...
       */
      quote_terms?: string;
      /**
       * @description Taxes can be applied to the invoice 
       * @example 1
       */
      invoice_taxes?: number;
      /**
       * @description The default design id (invoice, quote etc) 
       * @example 1
       */
      invoice_design_id?: string;
      /**
       * @description The default design id (invoice, quote etc) 
       * @example 1
       */
      quote_design_id?: string;
      /**
       * @description The default invoice footer 
       * @example 1
       */
      invoice_footer?: string;
      /**
       * @description JSON string of invoice labels 
       * @example 1
       */
      invoice_labels?: string;
      /**
       * @description The tax rate (float) 
       * @example 10
       */
      tax_rate1?: number;
      /**
       * @description The tax name 
       * @example GST
       */
      tax_name1?: string;
      /**
       * @description The tax rate (float) 
       * @example 10
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example GST
       */
      tax_name2?: string;
      /**
       * @description The tax rate (float) 
       * @example 10
       */
      tax_rate3?: number;
      /**
       * @description The tax name 
       * @example GST
       */
      tax_name3?: string;
      /**
       * @description The default payment type id 
       * @example 1
       */
      payment_type_id?: string;
      /**
       * @description JSON string of custom fields 
       * @example {}
       */
      custom_fields?: string;
      /**
       * @description The default email footer 
       * @example A default email footer
       */
      email_footer?: string;
      /**
       * @description The email driver to use to send email, options include default, gmail 
       * @example default
       */
      email_sending_method?: string;
      /**
       * @description The hashed_id of the user account to send email from 
       * @example F76sd34D
       */
      gmail_sending_user_id?: string;
      /** @example Your Invoice Subject */
      email_subject_invoice?: string;
      /** @example Your Quote Subject */
      email_subject_quote?: string;
      /** @example Your Payment Subject */
      email_subject_payment?: string;
      /**
       * @description The full template for invoice emails 
       * @example <HTML></HTML>
       */
      email_template_invoice?: string;
      /**
       * @description The full template for quote emails 
       * @example <HTML></HTML>
       */
      email_template_quote?: string;
      /**
       * @description The full template for payment emails 
       * @example <HTML></HTML>
       */
      email_template_payment?: string;
      /**
       * @description Email subject for Reminder 
       * @example <HTML></HTML>
       */
      email_subject_reminder1?: string;
      /**
       * @description Email subject for Reminder 
       * @example <HTML></HTML>
       */
      email_subject_reminder2?: string;
      /**
       * @description Email subject for Reminder 
       * @example <HTML></HTML>
       */
      email_subject_reminder3?: string;
      /**
       * @description Email subject for endless reminders 
       * @example <HTML></HTML>
       */
      email_subject_reminder_endless?: string;
      /**
       * @description The full template for Reminder 1 
       * @example <HTML></HTML>
       */
      email_template_reminder1?: string;
      /**
       * @description The full template for Reminder 2 
       * @example <HTML></HTML>
       */
      email_template_reminder2?: string;
      /**
       * @description The full template for Reminder 3 
       * @example <HTML></HTML>
       */
      email_template_reminder3?: string;
      /**
       * @description The full template for enless reminders 
       * @example <HTML></HTML>
       */
      email_template_reminder_endless?: string;
      /**
       * @description Toggles whether a password is required to log into the client portal 
       * @example true
       */
      enable_portal_password?: boolean;
      /**
       * @description Toggles whether the terms dialogue is shown to the client 
       * @example true
       */
      show_accept_invoice_terms?: boolean;
      /**
       * @description Toggles whether the terms dialogue is shown to the client 
       * @example true
       */
      show_accept_quote_terms?: boolean;
      /**
       * @description Toggles whether a invoice signature is required 
       * @example true
       */
      require_invoice_signature?: boolean;
      /**
       * @description Toggles whether a quote signature is required 
       * @example true
       */
      require_quote_signature?: boolean;
      /**
       * @description The company name 
       * @example Acme Co
       */
      name?: string;
      /**
       * @description The company logo file 
       * @example logo.png
       */
      company_logo?: Record<string, never>;
      /**
       * @description The company website URL 
       * @example www.acme.com
       */
      website?: string;
      /**
       * @description The company address line 1 
       * @example Suite 888
       */
      address1?: string;
      /**
       * @description The company address line 2 
       * @example 5 Jimbo Way
       */
      address2?: string;
      /**
       * @description The company city 
       * @example Sydney
       */
      city?: string;
      /**
       * @description The company state 
       * @example Florisa
       */
      state?: string;
      /**
       * @description The company zip/postal code 
       * @example 90210
       */
      postal_code?: string;
      /**
       * @description The company phone 
       * @example 555-213-3948
       */
      phone?: string;
      /**
       * @description The company email 
       * @example joe@acme.co
       */
      email?: string;
      /**
       * @description The country ID 
       * @example 1
       */
      country_id?: string;
      /**
       * @description The company VAT/TAX ID number 
       * @example 32 120 377 720
       */
      vat_number?: string;
      /**
       * @description The default page size 
       * @example A4
       */
      page_size?: string;
      /**
       * @description The font size 
       * @example 9
       */
      font_size?: number;
      /**
       * @description The primary font 
       * @example roboto
       */
      primary_font?: string;
      /**
       * @description The secondary font 
       * @example roboto
       */
      secondary_font?: string;
      /**
       * @description Flags whether to hide the paid to date field 
       * @example false
       */
      hide_paid_to_date?: boolean;
      /**
       * @description Toggled whether to embed documents in the PDF 
       * @example false
       */
      embed_documents?: boolean;
      /**
       * @description The header for the PDF 
       * @example false
       */
      all_pages_header?: boolean;
      /**
       * @description The footer for the PDF 
       * @example false
       */
      all_pages_footer?: boolean;
      /**
       * @description Toggles whether to attach documents in the email 
       * @example false
       */
      document_email_attachment?: boolean;
      /**
       * @description Toggles password protection of the client portal 
       * @example false
       */
      enable_client_portal_password?: boolean;
      /**
       * @description Toggles the use of markdown in emails 
       * @example false
       */
      enable_email_markup?: boolean;
      /**
       * @description Toggles whether the client dashboard is shown in the client portal 
       * @example false
       */
      enable_client_portal_dashboard?: boolean;
      /**
       * @description Toggles whether the entire client portal is displayed to the client, or only the context 
       * @example false
       */
      enable_client_portal?: boolean;
      /**
       * @description The body of the email for statements 
       * @example template matter
       */
      email_template_statement?: string;
      /**
       * @description The subject of the email for statements 
       * @example subject matter
       */
      email_subject_statement?: string;
      /**
       * @description Toggles whether the signature (if available) is displayed on the PDF 
       * @example false
       */
      signature_on_pdf?: boolean;
      /**
       * @description The default quote footer 
       * @example the quote footer
       */
      quote_footer?: string;
      /**
       * @description Custom reminder template subject 
       * @example Custom Subject 1
       */
      email_subject_custom1?: string;
      /**
       * @description Custom reminder template subject 
       * @example Custom Subject 2
       */
      email_subject_custom2?: string;
      /**
       * @description Custom reminder template subject 
       * @example Custom Subject 3
       */
      email_subject_custom3?: string;
      /**
       * @description Custom reminder template body 
       * @example <HTML>
       */
      email_template_custom1?: string;
      /**
       * @description Custom reminder template body 
       * @example <HTML>
       */
      email_template_custom2?: string;
      /**
       * @description Custom reminder template body 
       * @example <HTML>
       */
      email_template_custom3?: string;
      /**
       * @description Toggles whether this reminder is enabled 
       * @example false
       */
      enable_reminder1?: boolean;
      /**
       * @description Toggles whether this reminder is enabled 
       * @example false
       */
      enable_reminder2?: boolean;
      /**
       * @description Toggles whether this reminder is enabled 
       * @example false
       */
      enable_reminder3?: boolean;
      /**
       * @description The Reminder interval 
       * @example 9
       */
      num_days_reminder1?: number;
      /**
       * @description The Reminder interval 
       * @example 9
       */
      num_days_reminder2?: number;
      /**
       * @description The Reminder interval 
       * @example 9
       */
      num_days_reminder3?: number;
      /**
       * @description (enum: after_invoice_date, before_due_date, after_due_date) 
       * @example after_invoice_date
       */
      schedule_reminder1?: string;
      /**
       * @description (enum: after_invoice_date, before_due_date, after_due_date) 
       * @example after_invoice_date
       */
      schedule_reminder2?: string;
      /**
       * @description (enum: after_invoice_date, before_due_date, after_due_date) 
       * @example after_invoice_date
       */
      schedule_reminder3?: string;
      /**
       * @description The late fee amount for reminder 1 
       * @example 10
       */
      late_fee_amount1?: number;
      /**
       * @description The late fee amount for reminder 2 
       * @example 20
       */
      late_fee_amount2?: number;
      /**
       * @description The late fee amount for reminder 2 
       * @example 100
       */
      late_fee_amount3?: number;
      /**
       * @description The frequency id of the endless reminder 
       * @example 1
       */
      endless_reminder_frequency_id?: string;
      /**
       * @description Determines if a client should receive the notification for a online payment 
       * @example false
       */
      client_online_payment_notification?: boolean;
      /**
       * @description Determines if a client should receive the notification for a manually entered payment 
       * @example false
       */
      client_manual_payment_notification?: boolean;
    };
    CompanyToken: {
      /**
       * @description The token name 
       * @example Token Name
       */
      name?: string;
      /**
       * @description The token value 
       * @example AS3df3jUUH765fhfd9KJuidj3JShjA
       */
      token?: string;
      /**
       * @description Determines whether the token is created by the system rather than a user 
       * @example true
       */
      is_system?: boolean;
    };
    CompanyUser: {
      /**
       * @description The company user permissions 
       * @example [create_invoice]
       */
      permissions?: string;
      /**
       * @description The company name 
       * @example The local shop
       */
      settings?: Record<string, never>;
      /**
       * @description Determines whether the user owns this company 
       * @example true
       */
      is_owner?: boolean;
      /**
       * @description Determines whether the user is the admin of this company 
       * @example true
       */
      is_admin?: boolean;
      /**
       * @description Determines whether the users access to this company has been locked 
       * @example true
       */
      is_locked?: boolean;
      /**
       * @description The last time the record was modified 
       * @example 1231232312321
       */
      updated_at?: number;
      /**
       * @description Timestamp when the user was archived 
       * @example 12312312321
       */
      deleted_at?: number;
      account?: components["schemas"]["Account"];
      company?: components["schemas"]["Company"];
      user?: components["schemas"]["User"];
      token?: components["schemas"]["CompanyToken"];
    };
    CreditPaymentable: {
      /**
       * @description The credit hashed id 
       * @example Opnel5aKBz
       */
      credit_id?: string;
      /**
       * @description The credit amount 
       * @example 2
       */
      amount?: string;
    };
    Credit: {
      /**
       * @description The credit hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example
       */
      client_id?: string;
      /**
       * @description The status field id infors of the current status of the credit 
       * @example
       */
      status_id?: string;
      /**
       * @description The linked invoice this credit is applied to 
       * @example
       */
      invoice_id?: string;
      /**
       * @description The credit number - is a unique alpha numeric number per credit per company 
       * @example QUOTE_101
       */
      number?: string;
      /**
       * @description The purchase order number this credit refers to 
       * @example
       */
      po_number?: string;
      /**
       * @description The credit terms field 
       * @example
       */
      terms?: string;
      /**
       * @description The public notes field of the credit 
       * @example
       */
      public_notes?: string;
      /**
       * @description The private notes field of the credit 
       * @example
       */
      private_notes?: string;
      /**
       * @description The credit footer text 
       * @example
       */
      footer?: string;
      /**
       * @description A Custom value 
       * @example
       */
      custom_value1?: string;
      /**
       * @description A Custom value 
       * @example
       */
      custom_value2?: string;
      /**
       * @description A Custom value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A Custom value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name1?: string;
      /**
       * @description The tax rate 
       * @example
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax name 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total taxes for the credit 
       * @example 10.00
       */
      total_taxes?: number;
      /**
       * @description The line items array containing the line items of the credit 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * Format: float 
       * @description The total credit amount 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The credit balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description _________ 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description _________ 
       * @example 10.00
       */
      discount?: number;
      /**
       * Format: float 
       * @description _________ 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description _________ 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description _________ 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example true
       */
      uses_inclusive_taxes?: boolean;
      /**
       * Format: date 
       * @description The Credit Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * Format: date 
       * @description The last date the credit was sent out 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The Next date for a reminder to be sent 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * Format: date 
       * @description _________ 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * Format: date 
       * @description _________ 
       * @example 1994-07-30
       */
      due_date?: string;
      settings?: components["schemas"]["CompanySettings"];
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      last_viewed?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: float 
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * Format: float 
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * Format: float 
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * Format: float 
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax4?: boolean;
    };
    Design: {
      /**
       * @description The design hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The design name 
       * @example Beauty
       */
      name?: string;
      /**
       * @description The design HTML 
       * @example <html></html>
       */
      design?: string;
      /**
       * @description Flag to determine if the design is a custom user design 
       * @example true
       */
      is_custom?: boolean;
      /**
       * @description Flag to determine if the design is available for use 
       * @example true
       */
      is_active?: boolean;
      /**
       * @description Flag to determine if the design is deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      deleted_at?: number;
    };
    Document: {
      /**
       * @description The document hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example
       */
      assigned_user_id?: string;
      /**
       * @description The project associated with this document 
       * @example
       */
      project_id?: string;
      /**
       * @description The vendor associated with this documents 
       * @example
       */
      vendor_id?: string;
      /**
       * @description The document name 
       * @example Beauty
       */
      name?: string;
      /**
       * @description The document url 
       * @example Beauty
       */
      url?: string;
      /**
       * @description The document preview url 
       * @example Beauty
       */
      preview?: string;
      /**
       * @description The document type 
       * @example Beauty
       */
      type?: string;
      /**
       * @description The document disk 
       * @example Beauty
       */
      disk?: string;
      /**
       * @description The document hashed 
       * @example Beauty
       */
      hash?: string;
      /**
       * @description Flag to determine if the document is deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Flag to determine if the document is a default doc 
       * @example true
       */
      is_default?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      deleted_at?: number;
    };
    Error: {
      /**
       * @description The company name 
       * @example Unexpected error
       */
      message?: string;
      /**
       * @description The HTTP error code 
       * @example 500
       */
      code?: number;
    };
    ExpenseCategory: {
      /**
       * @description The expense hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The expense category name 
       * @example Accounting
       */
      name?: string;
      /**
       * @description The user hashed id 
       * @example XS987sD
       */
      user_id?: string;
      /**
       * @description Flag determining whether the expense category has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description The updated at timestamp 
       * @example 2
       */
      updated_at?: number;
      /**
       * @description The created at timestamp 
       * @example 2
       */
      created_at?: number;
    };
    Expense: {
      /**
       * @description The expense hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example
       */
      client_id?: string;
      /**
       * @description The related invoice hashed id 
       * @example
       */
      invoice_id?: string;
      /**
       * @description The bank id related to this expense 
       * @example
       */
      bank_id?: string;
      /**
       * @description The currency id of the related invoice 
       * @example
       */
      invoice_currency_id?: string;
      /**
       * @description The currency id of the expense 
       * @example
       */
      expense_currency_id?: string;
      /**
       * @description The invoice category id 
       * @example
       */
      invoice_category_id?: string;
      /**
       * @description The payment type id 
       * @example
       */
      payment_type_id?: string;
      /**
       * @description The related recurring expense this expense was created from 
       * @example
       */
      recurring_expense_id?: string;
      /**
       * @description The private notes of the expense 
       * @example
       */
      private_notes?: string;
      /**
       * @description The public notes of the expense 
       * @example
       */
      public_notes?: string;
      /**
       * @description The transaction references of the expense 
       * @example
       */
      transaction_reference?: string;
      /**
       * @description The transaction id of the expense 
       * @example
       */
      transcation_id?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value1?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value2?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description Tax name 
       * @example
       */
      tax_name1?: string;
      /**
       * @description Tax name 
       * @example
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description Tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description Tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description Tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description Tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total expense amont 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The total foreign amount of the expense 
       * @example 10.00
       */
      foreign_amount?: number;
      /**
       * Format: float 
       * @description The exchange rate at the time of the expense 
       * @example 0.80
       */
      exchange_rate?: number;
      /**
       * @description The expense date formate Y-m-d 
       * @example 2022-12-01
       */
      date?: string;
      /**
       * @description The date of payment for the expense, format Y-m-d 
       * @example
       */
      payment_date?: string;
      /**
       * @description Flag whether the expense should be invoiced 
       * @example true
       */
      should_be_invoiced?: boolean;
      /**
       * @description Boolean determining whether the expense has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Passing the expense documents over to the invoice 
       * @example true
       */
      invoice_documents?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
    };
    FeesAndLimits: {
      /**
       * @description The minimum amount accepted for this gateway 
       * @example 2
       */
      min_limit?: string;
      /**
       * @description The maximum amount accepted for this gateway 
       * @example 2
       */
      max_limit?: string;
      /**
       * Format: float 
       * @description The gateway fee amount 
       * @example 2.0
       */
      fee_amount?: number;
      /**
       * Format: float 
       * @description The gateway fee percentage 
       * @example 2.0
       */
      fee_percent?: number;
      /**
       * @description Fee tax name 
       * @example GST
       */
      fee_tax_name1?: string;
      /**
       * @description Fee tax name 
       * @example VAT
       */
      fee_tax_name2?: string;
      /**
       * @description Fee tax name 
       * @example CA Sales Tax
       */
      fee_tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.0
       */
      fee_tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 17.5
       */
      fee_tax_rate2?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 25.0
       */
      fee_tax_rate3?: number;
      /**
       * Format: float 
       * @description If set the fee amount will be no higher than this amount 
       * @example 2.0
       */
      fee_cap?: number;
      /**
       * @description Adjusts the fee to match the exact gateway fee. 
       * @example true
       */
      adjust_fee_percent?: boolean;
    };
    FillableInvoice: {
      /**
       * @description __________ 
       * @example
       */
      assigned_user_id?: string;
      /**
       * @description ________ 
       * @example
       */
      client_id?: string;
      /**
       * @description The invoice number - is a unique alpha numeric number per invoice per company 
       * @example INV_101
       */
      number?: string;
      /**
       * @description ________ 
       * @example
       */
      po_number?: string;
      /**
       * @description ________ 
       * @example
       */
      terms?: string;
      /**
       * @description ________ 
       * @example
       */
      public_notes?: string;
      /**
       * @description ________ 
       * @example
       */
      private_notes?: string;
      /**
       * @description ________ 
       * @example
       */
      footer?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value1?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value2?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value3?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value4?: string;
      /**
       * @description ________ 
       * @example
       */
      tax_name1?: string;
      /**
       * @description ________ 
       * @example
       */
      tax_name2?: string;
      /**
       * @description _________ 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * @description _________ 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description ________ 
       * @example
       */
      tax_name3?: string;
      /**
       * @description _________ 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * @description _________ 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * @description _________ 
       * @example 10.00
       */
      discount?: number;
      /**
       * @description _________ 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description _________ 
       * @example 1
       */
      is_amount_discount?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example 1
       */
      uses_inclusive_taxes?: boolean;
      /**
       * @description The Invoice Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * @description _________ 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * @description _________ 
       * @example 1994-07-30
       */
      due_date?: string;
      /**
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
    };
    GenericReportSchema: {
      /**
       * @description The string representation of the date range of data to be returned 
       * @example last7
       */
      date_range?: string;
      /**
       * @description The date column to search between. 
       * @example created_at
       */
      date_key?: string;
      /**
       * @description The start date to search between 
       * @example 2000-10-31
       */
      start_date?: string;
      /**
       * @description The end date to search between 
       * @example 2
       */
      end_date?: string;
      report_keys?: (string)[];
    };
    GroupSetting: {
      /**
       * @description The group setting hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The company hashed id 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The name of the group 
       * @example A groupies group
       */
      name?: string;
      /**
       * @description The settings object 
       * @example
       */
      settings?: Record<string, never>;
    };
    InvoicePaymentable: {
      /**
       * @description ______ 
       * @example Opnel5aKBz
       */
      invoice_id?: string;
      /**
       * @description ______ 
       * @example 2
       */
      amount?: string;
    };
    Invoice: {
      /**
       * @description The invoice hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The invoice status variable 
       * @example 4
       */
      status_id?: string;
      /**
       * @description The invoice number - is a unique alpha numeric number per invoice per company 
       * @example INV_101
       */
      number?: string;
      /**
       * @description The purchase order associated with this invoice 
       * @example PO-1234
       */
      po_number?: string;
      /**
       * @description The invoice terms 
       * @example These are invoice terms
       */
      terms?: string;
      /**
       * @description The public notes of the invoice 
       * @example These are some public notes
       */
      public_notes?: string;
      /**
       * @description The private notes of the invoice 
       * @example These are some private notes
       */
      private_notes?: string;
      /**
       * @description The invoice footer notes 
       * @example
       */
      footer?: string;
      /**
       * @description A custom field value 
       * @example 2022-10-01
       */
      custom_value1?: string;
      /**
       * @description A custom field value 
       * @example Something custom
       */
      custom_value2?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name1?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total taxes for the invoice 
       * @example 10.00
       */
      total_taxes?: number;
      /**
       * @description An array of objects which define the line items of the invoice 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * Format: float 
       * @description The invoice amount 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The invoice balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount paid on the invoice to date 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description The invoice discount, can be an amount or a percentage 
       * @example 10.00
       */
      discount?: number;
      /**
       * Format: float 
       * @description The deposit/partial amount 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description Flag determining if the discount is an amount or a percentage 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description Defines if the invoice has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example true
       */
      uses_inclusive_taxes?: boolean;
      /**
       * Format: date 
       * @description The Invoice Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * Format: date 
       * @description The last date the invoice was sent out 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The Next date for a reminder to be sent 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * Format: date 
       * @description The due date for the deposit/partial amount 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * Format: date 
       * @description The due date of the invoice 
       * @example 1994-07-30
       */
      due_date?: string;
      settings?: components["schemas"]["CompanySettings"];
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      last_viewed?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: float 
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * Format: float 
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * Format: float 
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * Format: float 
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax4?: boolean;
    };
    Payment: {
      /**
       * @description The payment hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The client hashed id 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The invitation hashed id 
       * @example Opnel5aKBz
       */
      invitation_id?: string;
      /**
       * @description The client contact hashed id 
       * @example Opnel5aKBz
       */
      client_contact_id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The Payment Type ID 
       * @example 1
       */
      type_id?: string;
      /**
       * @description The Payment date 
       * @example 1-1-2014
       */
      date?: string;
      /**
       * @description The transaction reference as defined by the payment gateway 
       * @example xcsSxcs124asd
       */
      transaction_reference?: string;
      /**
       * @description The assigned user hashed id 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The private notes of the payment 
       * @example The payment was refunded due to error
       */
      private_notes?: string;
      /**
       * @description Flags whether the payment was made manually or processed via a gateway 
       * @example true
       */
      is_manual?: boolean;
      /**
       * @description Defines if the payment has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description The amount of this payment 
       * @example 10
       */
      amount?: number;
      /**
       * @description The refunded amount of this payment 
       * @example 10
       */
      refunded?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * @description The company gateway id 
       * @example 3
       */
      company_gateway_id?: string;
      paymentables?: components["schemas"]["Paymentable"];
      invoices?: (components["schemas"]["InvoicePaymentable"])[];
      credits?: (components["schemas"]["CreditPaymentable"])[];
    };
    PaymentTerm: {
      /**
       * @description The payment term length in days 
       * @example 1
       */
      num_days?: number;
      /**
       * @description The payment term length in string format 
       * @example NET 1
       */
      name?: string;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      archived_at?: number;
    };
    Paymentable: {
      /**
       * @description The paymentable hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The invoice hashed id 
       * @example AS3df3A
       */
      invoice_id?: string;
      /**
       * @description The credit hashed id 
       * @example AS3df3A
       */
      credit_id?: string;
      /**
       * Format: float 
       * @description The amount that has been refunded for this payment 
       * @example 10.00
       */
      refunded?: number;
      /**
       * Format: float 
       * @description The amount that has been applied to the payment 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      created_at?: number;
    };
    Product: {
      /**
       * @description The product hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
    };
    Project: {
      /**
       * @description The project hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The project name 
       * @example New Project
       */
      name?: string;
    };
    Quote: {
      /**
       * @description The quote hashed id 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example
       */
      client_id?: string;
      /**
       * @description The status of the quote 
       * @example
       */
      status_id?: string;
      /**
       * @description The quote number - is a unique alpha numeric number per quote per company 
       * @example QUOTE_101
       */
      number?: string;
      /**
       * @description The purchase order number associated with this quote 
       * @example PO-1234
       */
      po_number?: string;
      /**
       * @description The quote terms 
       * @example These are some quote terms. Valid for 14 days.
       */
      terms?: string;
      /**
       * @description Public notes for the quote 
       * @example These are public notes which the client may see
       */
      public_notes?: string;
      /**
       * @description Private notes for the quote 
       * @example These are private notes, not to be disclosed to the client
       */
      private_notes?: string;
      /**
       * @description Footer text of quote 
       * @example The text goes in the footer of the quote
       */
      footer?: string;
      /**
       * @description Custom value field 
       * @example A custom value
       */
      custom_value1?: string;
      /**
       * @description Custom value field 
       * @example A custom value
       */
      custom_value2?: string;
      /**
       * @description Custom value field 
       * @example A custom value
       */
      custom_value3?: string;
      /**
       * @description Custom value field 
       * @example A custom value
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example GST
       */
      tax_name1?: string;
      /**
       * @description The tax name 
       * @example VAT
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total taxes for the quote 
       * @example 10.00
       */
      total_taxes?: number;
      /**
       * @description An array of line items of the quote 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * Format: float 
       * @description The total amount of the quote 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The balance due of the quote 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount that has been paid to date on the quote 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description The quote discount 
       * @example 10.00
       */
      discount?: number;
      /**
       * Format: float 
       * @description The partial/deposit amount 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description Boolean flag determining if the quote is an amount or percentage 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description Boolean flag determining if the quote has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example true
       */
      uses_inclusive_taxes?: boolean;
      /**
       * Format: date 
       * @description The Quote Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * Format: date 
       * @description The last date the quote was sent out 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The Next date for a reminder to be sent 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * Format: date 
       * @description The date when the partial/deposit is due 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * Format: date 
       * @description The date the quote is valid until 
       * @example 1994-07-30
       */
      due_date?: string;
      settings?: components["schemas"]["CompanySettings"];
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      last_viewed?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: float 
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * Format: float 
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * Format: float 
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * Format: float 
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax4?: boolean;
    };
    RecurringExpense: {
      /**
       * @description The hashed id of the recurring expense 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user who created the recurring expense 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The hashed id of the user assigned to this recurring expense 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The hashed id of the client 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The hashed id of the invoice 
       * @example Opnel5aKBz
       */
      invoice_id?: string;
      /**
       * @description The id of the bank associated with this recurring expense 
       * @example 22
       */
      bank_id?: string;
      /**
       * @description The currency id of the invoice associated with this recurring expense 
       * @example 1
       */
      invoice_currency_id?: string;
      /**
       * @description The currency id of the expense associated with this recurring expense 
       * @example 1
       */
      expense_currency_id?: string;
      /**
       * @description The category id of the invoice 
       * @example 1
       */
      invoice_category_id?: string;
      /**
       * @description The payment type id 
       * @example 1
       */
      payment_type_id?: string;
      /**
       * @description The recurring expense private notes 
       * @example Private and confidential
       */
      private_notes?: string;
      /**
       * @description The recurring expense public notes 
       * @example This is the best client in the world
       */
      public_notes?: string;
      /**
       * @description The recurring expense transaction reference 
       * @example EXP-1223-2333
       */
      transaction_reference?: string;
      /**
       * @description The transaction id of the recurring expense 
       * @example 1233312312
       */
      transcation_id?: string;
      /**
       * @description Custom value field 
       * @example $1000
       */
      custom_value1?: string;
      /**
       * @description Custom value field 
       * @example 2022-10-10
       */
      custom_value2?: string;
      /**
       * @description Custom value field 
       * @example short text
       */
      custom_value3?: string;
      /**
       * @description Custom value field 
       * @example very long text
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example GST
       */
      tax_name1?: string;
      /**
       * @description The tax name 
       * @example VAT
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total amount of the recurring expense 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: int 
       * @description The frequency this recurring expense fires 
       * @example 1
       */
      frequency_id?: number;
      /**
       * Format: int 
       * @description The number of remaining cycles for this recurring expense 
       * @example 1
       */
      remaining_cycles?: number;
      /**
       * Format: float 
       * @description The foreign currency amount of the recurring expense 
       * @example 10.00
       */
      foreign_amount?: number;
      /**
       * Format: float 
       * @description The exchange rate for the expernse 
       * @example 0.80
       */
      exchange_rate?: number;
      /**
       * @description The date of the expense 
       * @example
       */
      date?: string;
      /**
       * @description The date the expense was paid 
       * @example
       */
      payment_date?: string;
      /**
       * @description Boolean flag determining if the expense should be invoiced 
       * @example true
       */
      should_be_invoiced?: boolean;
      /**
       * @description Boolean flag determining if the recurring expense is deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: date 
       * @description The Date it was sent last 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The next send date 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * @description Boolean flag determining if the documents associated with this expense should be passed onto the invoice if it is converted to an invoice 
       * @example true
       */
      invoice_documents?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
    };
    RecurringInvoice: {
      /**
       * @description The hashed id of the recurring invoice 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The invoice status variable 
       * @example 4
       */
      status_id?: string;
      /**
       * @description The recurring invoice frequency 
       * @example 4
       */
      frequency_id?: number;
      /**
       * @description The number of invoices left to be generated 
       * @example 4
       */
      remaining_cycles?: number;
      /**
       * @description The recurringinvoice number - is a unique alpha numeric number per invoice per company 
       * @example INV_101
       */
      number?: string;
      /**
       * @description The purchase order associated with this recurring invoice 
       * @example PO-1234
       */
      po_number?: string;
      /**
       * @description The invoice terms 
       * @example These are invoice terms
       */
      terms?: string;
      /**
       * @description The public notes of the invoice 
       * @example These are some public notes
       */
      public_notes?: string;
      /**
       * @description The private notes of the invoice 
       * @example These are some private notes
       */
      private_notes?: string;
      /**
       * @description The invoice footer notes 
       * @example
       */
      footer?: string;
      /**
       * @description A custom field value 
       * @example 2022-10-01
       */
      custom_value1?: string;
      /**
       * @description A custom field value 
       * @example Something custom
       */
      custom_value2?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name1?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total taxes for the invoice 
       * @example 10.00
       */
      total_taxes?: number;
      /**
       * @description An array of objects which define the line items of the invoice 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * Format: float 
       * @description The invoice amount 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The invoice balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount paid on the invoice to date 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description The invoice discount, can be an amount or a percentage 
       * @example 10.00
       */
      discount?: number;
      /**
       * Format: float 
       * @description The deposit/partial amount 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description Flag determining if the discount is an amount or a percentage 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description Defines if the invoice has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example true
       */
      uses_inclusive_taxes?: boolean;
      /**
       * Format: date 
       * @description The Invoice Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * Format: date 
       * @description The last date the invoice was sent out 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The Next date for a reminder to be sent 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * Format: date 
       * @description The due date for the deposit/partial amount 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * Format: date 
       * @description The due date of the invoice 
       * @example 1994-07-30
       */
      due_date?: string;
      settings?: components["schemas"]["CompanySettings"];
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      last_viewed?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: float 
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * Format: float 
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * Format: float 
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * Format: float 
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax4?: boolean;
    };
    RecurringQuote: {
      /**
       * @description The hashed id of the recurring quote 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The user hashed id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The assigned user hashed id 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The company hashed id 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The client hashed id 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The quote status variable 
       * @example 4
       */
      status_id?: string;
      /**
       * @description The recurring quote frequency 
       * @example 4
       */
      frequency_id?: number;
      /**
       * @description The number of quotes left to be generated 
       * @example 4
       */
      remaining_cycles?: number;
      /**
       * @description The recurringquote number - is a unique alpha numeric number per quote per company 
       * @example INV_101
       */
      number?: string;
      /**
       * @description The purchase order associated with this recurring quote 
       * @example PO-1234
       */
      po_number?: string;
      /**
       * @description The quote terms 
       * @example These are quote terms
       */
      terms?: string;
      /**
       * @description The public notes of the quote 
       * @example These are some public notes
       */
      public_notes?: string;
      /**
       * @description The private notes of the quote 
       * @example These are some private notes
       */
      private_notes?: string;
      /**
       * @description The quote footer notes 
       * @example
       */
      footer?: string;
      /**
       * @description A custom field value 
       * @example 2022-10-01
       */
      custom_value1?: string;
      /**
       * @description A custom field value 
       * @example Something custom
       */
      custom_value2?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A custom field value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name1?: string;
      /**
       * @description The tax name 
       * @example
       */
      tax_name2?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate1?: number;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate2?: number;
      /**
       * @description The tax name 
       * @example
       */
      tax_name3?: string;
      /**
       * Format: float 
       * @description The tax rate 
       * @example 10.00
       */
      tax_rate3?: number;
      /**
       * Format: float 
       * @description The total taxes for the quote 
       * @example 10.00
       */
      total_taxes?: number;
      /**
       * @description An array of objects which define the line items of the quote 
       * @example
       */
      line_items?: Record<string, never>;
      /**
       * Format: float 
       * @description The quote amount 
       * @example 10.00
       */
      amount?: number;
      /**
       * Format: float 
       * @description The quote balance 
       * @example 10.00
       */
      balance?: number;
      /**
       * Format: float 
       * @description The amount paid on the quote to date 
       * @example 10.00
       */
      paid_to_date?: number;
      /**
       * Format: float 
       * @description The quote discount, can be an amount or a percentage 
       * @example 10.00
       */
      discount?: number;
      /**
       * Format: float 
       * @description The deposit/partial amount 
       * @example 10.00
       */
      partial?: number;
      /**
       * @description Flag determining if the discount is an amount or a percentage 
       * @example true
       */
      is_amount_discount?: boolean;
      /**
       * @description Defines if the quote has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description Defines the type of taxes used as either inclusive or exclusive 
       * @example true
       */
      uses_inclusive_taxes?: boolean;
      /**
       * Format: date 
       * @description The quote Date 
       * @example 1994-07-30
       */
      date?: string;
      /**
       * Format: date 
       * @description The last date the quote was sent out 
       * @example 1994-07-30
       */
      last_sent_date?: string;
      /**
       * Format: date 
       * @description The Next date for a reminder to be sent 
       * @example 1994-07-30
       */
      next_send_date?: string;
      /**
       * Format: date 
       * @description The due date for the deposit/partial amount 
       * @example 1994-07-30
       */
      partial_due_date?: string;
      /**
       * Format: date 
       * @description The due date of the quote 
       * @example 1994-07-30
       */
      due_date?: string;
      settings?: components["schemas"]["CompanySettings"];
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      last_viewed?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
      /**
       * Format: float 
       * @description First Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge1?: number;
      /**
       * Format: float 
       * @description Second Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge2?: number;
      /**
       * Format: float 
       * @description Third Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge3?: number;
      /**
       * Format: float 
       * @description Fourth Custom Surcharge 
       * @example 10.00
       */
      custom_surcharge4?: number;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax1?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax2?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax3?: boolean;
      /**
       * @description Toggles charging taxes on custom surcharge amounts 
       * @example true
       */
      custom_surcharge_tax4?: boolean;
    };
    SystemLog: {
      /**
       * @description The account hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The company hashed id 
       * @example AS3df3A
       */
      company_id?: string;
      /**
       * @description The user_id hashed id 
       * @example AS3df3A
       */
      user_id?: string;
      /**
       * @description The client_id hashed id 
       * @example AS3df3A
       */
      client_id?: string;
      /**
       * @description The Log Type ID 
       * @example 1
       */
      event_id?: number;
      /**
       * @description The Category Type ID 
       * @example 1
       */
      category_id?: number;
      /**
       * @description The Type Type ID 
       * @example 1
       */
      type_id?: number;
      /**
       * @description The json object of the error 
       * @example {'key':'value'}
       */
      log?: Record<string, never>;
      /**
       * @description Timestamp 
       * @example 2
       */
      updated_at?: string;
      /**
       * @description Timestamp 
       * @example 2
       */
      created_at?: string;
    };
    TaskSchedulerSchema: {
      /**
       * @description The scheduler paused state 
       * @example false
       */
      paused?: boolean;
      /**
       * @description Accepted values (DAY,WEEK,MONTH,3MONTHS,YEAR) 
       * @example DAY
       */
      repeat_every?: string;
      /**
       * @description Timestamp when we should start the scheduler, default is today 
       * @example 1652898504
       */
      start_from?: number;
      /**
       * @description Job, we can find list of available jobs in Scheduler model 
       * @example create_credit_report
       */
      job?: string;
      /**
       * @description The string representation of the date range of data to be returned 
       * @example last7
       */
      date_range?: string;
      /**
       * @description The date column to search between. 
       * @example created_at
       */
      date_key?: string;
      /**
       * @description The start date to search between 
       * @example 2022-10-31
       */
      start_date?: string;
      /**
       * @description The end date to search between 
       * @example 2022-10-31
       */
      end_date?: string;
      report_keys?: (string)[];
    };
    UpdateTaskSchedulerSchema: {
      /**
       * @description The scheduler paused state 
       * @example false
       */
      paused?: boolean;
      /**
       * @description Accepted values (DAY,WEEK,MONTH,3MONTHS,YEAR) 
       * @example DAY
       */
      repeat_every?: string;
      /**
       * @description Timestamp when we should start the scheduler, default is today 
       * @example 1652898504
       */
      start_from?: number;
      /**
       * @description Job, we can find list of available jobs in Scheduler model 
       * @example create_credit_report
       */
      job?: string;
      /**
       * @description The string representation of the date range of data to be returned 
       * @example last7
       */
      date_range?: string;
      /**
       * @description The date column to search between. 
       * @example created_at
       */
      date_key?: string;
      /**
       * @description The start date to search between 
       * @example 2022-10-31
       */
      start_date?: string;
      /**
       * @description The end date to search between 
       * @example 2022-10-31
       */
      end_date?: string;
    };
    UpdateJobForASchedulerSchema: {
      /**
       * @description Set action name, action names can be found in Scheduler Model 
       * @example create_client_report
       */
      job?: string;
    };
    Task: {
      /**
       * @description The hashed id of the task 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user who created the task 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The assigned user of the task 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The hashed if of the client 
       * @example Opnel5aKBz
       */
      client_id?: string;
      /**
       * @description The hashed id of the invoice associated with the task 
       * @example Opnel5aKBz
       */
      invoice_id?: string;
      /**
       * @description The hashed id of the project associated with the task 
       * @example Opnel5aKBz
       */
      project_id?: string;
      /**
       * @description The number of the task 
       * @example TASK-123
       */
      number?: string;
      /**
       * @description An array of unix time stamps defining the start and end times of the task 
       * @example [[1,2],[3,4]]
       */
      time_log?: string;
      /**
       * @description Determines if the task is still running 
       * @example true
       */
      is_running?: boolean;
      /**
       * @description Boolean flag determining if the task has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * @description The hashed id of the task status 
       * @example Opnel5aKBz
       */
      task_status_id?: string;
      /**
       * @description The task description 
       * @example A wonder task to work on
       */
      description?: string;
      /**
       * @description The task duration 
       * @example
       */
      duration?: number;
      /**
       * @description The order of the task 
       * @example 4
       */
      task_status_order?: number;
      /**
       * @description A custom value 
       * @example 2022-10-10
       */
      custom_value1?: string;
      /**
       * @description A custom value 
       * @example $1100
       */
      custom_value2?: string;
      /**
       * @description A custom value 
       * @example I need help
       */
      custom_value3?: string;
      /**
       * @description A custom value 
       * @example INV-3343
       */
      custom_value4?: string;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 1434342123
       */
      archived_at?: number;
    };
    TaskStatus: {
      /**
       * @description The task status name 
       * @example Backlog
       */
      name?: string;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * @description A boolean flag determining if the task status has been deleted 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      archived_at?: number;
    };
    TaxRate: {
      /**
       * @description Thie hashed id of the tax 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The tax name 
       * @example GST
       */
      name?: string;
      /**
       * @description The tax rate 
       * @example 10
       */
      rate?: number;
      /**
       * @description Boolean flag determining if the tax has been deleted 
       * @example true
       */
      is_deleted?: boolean;
    };
    Template: {
      /**
       * @description The template HTML 
       * @example <HTML></HTML>
       */
      html?: string;
    };
    User: {
      /**
       * @description The hashed id of the user 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The first name of the user 
       * @example Brad
       */
      first_name?: string;
      /**
       * @description The last name of the user 
       * @example Pitt
       */
      last_name?: string;
      /**
       * @description The users email address 
       * @example brad@pitt.com
       */
      email?: string;
      /**
       * @description The users phone number 
       * @example 555-1233-23232
       */
      phone?: string;
      /**
       * @description The users sign off signature 
       * @example Have a nice day!
       */
      signature?: string;
      /**
       * @description The users avatar 
       * @example https://url.to.your/avatar.png
       */
      avatar?: string;
      /**
       * @description The version of the invoice ninja terms that has been accepted by the user 
       * @example 1.0.1
       */
      accepted_terms_version?: string;
      /**
       * @description The provider id of the oauth entity 
       * @example jkhasdf789as6f675sdf768sdfs
       */
      oauth_user_id?: string;
      /**
       * @description The oauth entity id 
       * @example google
       */
      oauth_provider_id?: string;
    };
    ValidationError: {
      /**
       * @description The error message 
       * @example The given data was invalid.
       */
      message?: string;
      errors?: {
        value?: (string)[];
      };
    };
    VendorContact: {
      /**
       * @description The hashed id of the vendor contact 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user id 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The hashed id of the vendor 
       * @example Opnel5aKBz
       */
      vendor_id?: string;
      /**
       * @description The first name of the contact 
       * @example Harry
       */
      first_name?: string;
      /**
       * @description The last name of the contact 
       * @example Windsor
       */
      last_name?: string;
      /**
       * @description The contacts phone number 
       * @example 555-123-1234
       */
      phone?: string;
      /**
       * @description A custom value 
       * @example 2022-10-10
       */
      custom_value1?: string;
      /**
       * @description A custom value 
       * @example $1000
       */
      custom_value2?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value3?: string;
      /**
       * @description A custom value 
       * @example
       */
      custom_value4?: string;
      /**
       * @description The contact email address 
       * @example harry@windsor.com
       */
      email?: string;
      /**
       * @description Boolean flag determining if the contact is the primary contact for the vendor 
       * @example true
       */
      is_primary?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      deleted_at?: number;
    };
    Vendor: {
      /**
       * @description The hashed id of the vendor 
       * @example Opnel5aKBz
       */
      id?: string;
      /**
       * @description The hashed id of the user who created the vendor 
       * @example Opnel5aKBz
       */
      user_id?: string;
      /**
       * @description The hashed id of the assigned user to this vendor 
       * @example Opnel5aKBz
       */
      assigned_user_id?: string;
      /**
       * @description The hashed id of the company 
       * @example Opnel5aKBz
       */
      company_id?: string;
      /**
       * @description The hashed id of the client 
       * @example Opnel5aKBz
       */
      client_id?: string;
      contacts?: (components["schemas"]["VendorContact"])[];
      /**
       * @description The vendor name 
       * @example Harry's cafe de wheels
       */
      name?: string;
      /**
       * @description The website of the vendor 
       * @example www.harry.com
       */
      website?: string;
      /**
       * @description The private notes of the vendor 
       * @example Shhh, don't tell the vendor
       */
      private_notes?: string;
      /**
       * @description The industry id of the vendor 
       * @example 1
       */
      industry_id?: string;
      /**
       * @description ________ 
       * @example
       */
      size_id?: string;
      /**
       * @description ________ 
       * @example
       */
      address1?: string;
      /**
       * @description ________ 
       * @example
       */
      address2?: string;
      /**
       * @description ________ 
       * @example
       */
      city?: string;
      /**
       * @description ________ 
       * @example
       */
      state?: string;
      /**
       * @description ________ 
       * @example
       */
      postal_code?: string;
      /**
       * @description The client phone number 
       * @example 555-3434-3434
       */
      phone?: string;
      /**
       * @description ________ 
       * @example
       */
      country_id?: string;
      /**
       * @description ________ 
       * @example 4
       */
      currency_id?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value1?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value2?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value3?: string;
      /**
       * @description ________ 
       * @example
       */
      custom_value4?: string;
      /**
       * @description ________ 
       * @example
       */
      vat_number?: string;
      /**
       * @description ________ 
       * @example
       */
      id_number?: string;
      /**
       * @description ________ 
       * @example
       */
      number?: string;
      /**
       * @description ________ 
       * @example true
       */
      is_deleted?: boolean;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      last_login?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      created_at?: number;
      /**
       * Format: integer 
       * @description Timestamp 
       * @example 134341234234
       */
      updated_at?: number;
      settings?: components["schemas"]["CompanySettings"];
    };
    Webhook: {
      /**
       * @description The subscription hashed id 
       * @example AS3df3A
       */
      id?: string;
      /**
       * @description The subscription event id 
       * @example AS3df3A
       */
      event_id?: string;
      /**
       * @description The api endpoint 
       * @example AS3df3A
       */
      target_url?: string;
      /**
       * @description JSON or UBL 
       * @example JSON
       */
      format?: string;
    };
  };
  responses: never;
  parameters: {
    /** @description The API secret as defined by the .env variable API_SECRET */
    "X-Api-Secret": string;
    /** @description Used to send the XMLHttpRequest header */
    "X-Requested-With": string;
    /** @description The API token to be used for authentication */
    "X-Api-Token": string;
    /** @description The login password when challenged */
    "X-Api-Password": string;
    /** @description Includes child relationships in the response, format is comma separated */
    include?: string;
    /** @description Returns static variables */
    include_static?: string;
    /** @description Clears the static cache */
    clear_cache?: string;
    /** @description Replaces the default response index from data to a user specific string */
    index?: string;
    /** @description The API version */
    api_version?: number;
  };
  requestBodies: never;
  headers: {
    /** @description The API version */
    "X-MINIMUM-CLIENT-VERSION": number;
    /** @description The number of requests left for the time window. */
    "X-RateLimit-Remaining": number;
    /** @description The total number of requests in a given time window. */
    "X-RateLimit-Limit": number;
  };
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /**
   * Attempts a new account signup 
   * @description Attempts a new account signup and returns a CompanyUser object on success
   */
  postSignup: {
    parameters: {
      query: {
        /**
         * @description A custom name for the user company token 
         * @example Daves iOS Device
         */
        token_name: string;
      };
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Signup credentials */
    requestBody: {
      content: {
        "application/json": {
          /** @description The user email address */
          email?: string;
          /** @description The signup users first name */
          first_name?: string;
          /** @description The signup users last name */
          last_name?: string;
          /** @description The user accepted the terms of service */
          terms_of_service?: boolean;
          /** @description The user accepted the privacy policy */
          privacy_policy?: boolean;
          /**
           * @description The user password must meet minimum criteria ~ >6 characters 
           * @example 1234567
           */
          password?: string;
        };
      };
    };
    responses: {
      /** @description The Company User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyUser"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of actvities 
   * @description Lists all activities
   */
  getActivities: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
        /**
         * @description The number of activities to return 
         * @example 50
         */
        rows?: number;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of actvities */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Activity"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a PDF for the given activity 
   * @description Gets a PDF for the given activity
   */
  getActivityHistoricalEntityPdf: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Activity Hashed ID 
         * @example D2J234DFA
         */
        activity_id: string;
      };
    };
    responses: {
      /** @description PDF File */
      200: never;
      /** @description No file exists for the given record */
      404: never;
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts authentication 
   * @description Returns a CompanyUser object on success
   */
  postLogin: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        include_static?: components["parameters"]["include_static"];
        clear_cache?: components["parameters"]["clear_cache"];
      };
      header: {
        "X-Api-Secret": components["parameters"]["X-Api-Secret"];
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": {
          /** @description The user email address */
          email?: string;
          /**
           * @description The user password must meet minimum criteria ~ >6 characters 
           * @example 1234567
           */
          password?: string;
        };
      };
    };
    responses: {
      /** @description The Company User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyUser"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Refreshes the dataset 
   * @description Refreshes the dataset
   */
  refresh: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        include_static?: components["parameters"]["include_static"];
        clear_cache?: components["parameters"]["clear_cache"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The Company User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyUser"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Processing webhooks from Yodlee 
   * @description Notifies the system when a data point can be refreshed
   */
  yodleeRefreshWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of bank_integrations 
   * @description Lists all bank integrations
   */
  getBankIntegrations: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
        /**
         * @description The number of bank integrations to return 
         * @example 50
         */
        rows?: number;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of bank integrations */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a bank_integration 
   * @description Adds an bank_integration to a company
   */
  storeBankIntegration: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_integration 
   * @description Displays a bank_integration by id
   */
  showBankIntegration: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankIntegration Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a bank_integration 
   * @description Handles the updating of a bank_integration by id
   */
  updateBankIntegration: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankIntegration Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a bank_integration 
   * @description Handles the deletion of a bank_integration by id
   */
  deleteBankIntegration: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankIntegration Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_integration for editing 
   * @description Displays a bank_integration by id
   */
  editBankIntegration: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankIntegration Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank bank_integration object 
   * @description Returns a blank object with default values
   */
  getBankIntegrationsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of bank_integrations */
  bulkBankIntegrations: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Action paramters */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets the list of accounts from the remote server 
   * @description Adds an bank_integration to a company
   */
  getRefreshAccounts: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Removes an account from the integration 
   * @description Removes an account from the integration
   */
  getRemoveAccount: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the bank_integration object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieve transactions for a account 
   * @description Retrieve transactions for a account
   */
  getAccountTransactions: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Retrieve transactions for a account */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankIntegration"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of bank_transactions 
   * @description Lists all bank integrations
   */
  getBankTransactions: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
        /**
         * @description The number of bank integrations to return 
         * @example 50
         */
        rows?: number;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of bank integrations */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a bank_transaction 
   * @description Adds an bank_transaction to a company
   */
  storeBankTransaction: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved bank_transaction object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_transaction 
   * @description Displays a bank_transaction by id
   */
  showBankTransaction: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankTransaction Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a bank_transaction 
   * @description Handles the updating of a bank_transaction by id
   */
  updateBankTransaction: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankTransaction Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a bank_transaction 
   * @description Handles the deletion of a bank_transaction by id
   */
  deleteBankTransaction: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankTransaction Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_transaction for editing 
   * @description Displays a bank_transaction by id
   */
  editBankTransaction: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The BankTransaction Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank bank_transaction object 
   * @description Returns a blank object with default values
   */
  getBankTransactionsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank bank_transaction object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransaction"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of bank_transations */
  bulkBankTransactions: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Action paramters */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs match actions on an array of bank_transactions */
  matchBankTransactions: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Action paramters */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of bank_transaction_rules 
   * @description Lists all bank transaction rules
   */
  getBankTransactionRules: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
        /**
         * @description The number of bank integrations to return 
         * @example 50
         */
        rows?: number;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of bank integrations */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a bank_transaction rule 
   * @description Adds an bank_transaction to a company
   */
  storeBankTransactionRule: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved bank_transaction rule object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_transaction 
   * @description Displays a bank_transaction by id
   */
  showBankTransactionRule: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Bank Transaction RuleHashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction rule object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a bank_transaction Rule 
   * @description Handles the updating of a bank_transaction rule by id
   */
  updateBankTransactionRule: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Bank Transaction Rule Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction rule object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a bank_transaction rule 
   * @description Handles the deletion of a bank_transaction rule by id
   */
  deleteBankTransactionRule: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Bank Transaction Rule Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a bank_transaction for editing 
   * @description Displays a bank_transaction by id
   */
  editBankTransactionRule: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Bank Transaction Rule Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the bank_transaction rule object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank bank_transaction rule object 
   * @description Returns a blank object with default values
   */
  getBankTransactionRulesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank bank_transaction rule object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["BankTransactionRule"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of bank_transation rules */
  bulkBankTransactionRules: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Action paramters */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Get chart data 
   * @description Get chart data
   */
  getChartTotals: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
        /**
         * @description The number of activities to return 
         * @example 50
         */
        rows?: number;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description json dataset of chart data */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of clients 
   * @description Lists clients, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the clients, these are handled by the ClientFilters class which defines the methods available
   */
  getClients: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of clients */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the cl.ient object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getClientsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of clients */
  bulkClients: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Client User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a client 
   * @description Handles the uploading of a document to a client
   */
  uploadClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Purges a client from the system 
   * @description Handles purging a client
   */
  purgeClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Merges two clients 
   * @description Handles merging 2 clients
   */
  mergeClient: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Client Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The Mergeable Client Hashed ID 
         * @example D2J234DFA
         */
        mergeable_client_hashed_id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of client_gateway_tokens 
   * @description Lists client_gateway_tokens, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the client_gateway_tokens, these are handled by the ClientGatewayTokenFilters class which defines the methods available
   */
  getClientGatewayTokens: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of client_gateway_tokens */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeClientGatewayToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showClientGatewayToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ClientGatewayToken Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the cl.ient object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateClientGatewayToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ClientGatewayToken Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteClientGatewayToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ClientGatewayToken Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editClientGatewayToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ClientGatewayToken Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getClientGatewayTokensCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ClientGatewayToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Return a PDF of the client statement 
   * @description Return a PDF of the client statement
   */
  clientStatement: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Statment Options */
    requestBody: {
      content: {
        "application/json": {
          /** @description The start date of the statement period - format Y-m-d */
          start_date?: string;
          /** @description The start date of the statement period - format Y-m-d */
          end_date?: string;
          /** @description The hashed ID of the client */
          client_id?: string;
          /** @description Flag which determines if the payments table is shown */
          show_payments_table?: boolean;
          /** @description Flag which determines if the aging table is shown */
          show_aging_table?: boolean;
        };
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of companies 
   * @description Lists companies, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the companies, these are handled by the CompanyFilters class which defines the methods available
   */
  getCompanies: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of companies */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a company 
   * @description Adds an company to the system
   */
  storeCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank company object 
   * @description Returns a blank object with default values
   */
  getCompaniesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an company 
   * @description Displays an company by id
   */
  showCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an company 
   * @description Handles the updating of an company by id
   */
  updateCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a company 
   * @description Handles the deletion of an company by id
   */
  deleteCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an company for editting 
   * @description Displays an company by id
   */
  editCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a company 
   * @description Handles the uploading of a document to a company
   */
  uploadCompanies: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Sets the company as the default company. 
   * @description Sets the company as the default company.
   */
  setDefaultCompany: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        company: string;
      };
    };
    responses: {
      /** @description Returns the company object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Company"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of company_gateways 
   * @description Lists company_gateways, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the company_gateways, these are handled by the CompanyGatewayFilters class which defines the methods available
   */
  getCompanyGateways: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of company_gateways */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a CompanyGateway 
   * @description Adds an CompanyGateway to the system
   */
  storeCompanyGateway: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved CompanyGateway object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank CompanyGateway object 
   * @description Returns a blank object with default values
   */
  getCompanyGatewaysCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank CompanyGateway object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an CompanyGateway 
   * @description Displays an CompanyGateway by id
   */
  showCompanyGateway: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The CompanyGateway Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the CompanyGateway object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an CompanyGateway 
   * @description Handles the updating of an CompanyGateway by id
   */
  updateCompanyGateway: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The CompanyGateway Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the CompanyGateway object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a CompanyGateway 
   * @description Handles the deletion of an CompanyGateway by id
   */
  deleteCompanyGateway: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The CompanyGateway Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an CompanyGateway for editting 
   * @description Displays an CompanyGateway by id
   */
  editCompanyGateway: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The CompanyGateway Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the CompanyGateway object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of company_gateways */
  bulkCompanyGateways: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Array of company gateway IDs */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Company Gateways response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyGateway"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of company_ledger 
   * @description Lists the company_ledger.
   */
  getCompanyLedger: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of company_ledger */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyLedger"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Update a company user record 
   * @description Attempts to update a company user record. A company user can modify only their settings fields. Full access for Admin users
   */
  updateCompanyUser: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The Company User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyUser"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Connect an oauth user to an existing user 
   * @description Refreshes the dataset
   */
  connected_account: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        include_static?: components["parameters"]["include_static"];
        clear_cache?: components["parameters"]["clear_cache"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The Company User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of credits 
   * @description Lists credits, search and filters allow fine grained lists to be generated.
   *      *
   *      *      Query parameters can be added to performed more fine grained filtering of the credits, these are handled by the CreditFilters class which defines the methods available
   */
  getCredits: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of credits */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a credit 
   * @description Adds an credit to the system
   */
  storeCredit: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank credit object 
   * @description Returns a blank object with default values
   */
  getCreditsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an credit 
   * @description Displays an credit by id
   */
  showCredit: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Credit Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an Credit 
   * @description Handles the updating of an Credit by id
   */
  updateCredit: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Credit Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a credit 
   * @description Handles the deletion of an credit by id
   */
  deleteCredit: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Credit Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an credit for editting 
   * @description Displays an credit by id
   */
  editCredit: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of credits */
  bulkCredits: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a credit 
   * @description Handles the uploading of a document to a credit
   */
  uploadCredits: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Credit Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of designs 
   * @description Lists designs
   */
  getDesigns: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of designs */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a design 
   * @description Adds an design to a company
   */
  storeDesign: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved design object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a design 
   * @description Displays a design by id
   */
  showDesign: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Design Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the expense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a design 
   * @description Handles the updating of a design by id
   */
  updateDesign: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Design Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the design object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a design 
   * @description Handles the deletion of a design by id
   */
  deleteDesign: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Design Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a design for editting 
   * @description Displays a design by id
   */
  editDesign: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Design Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the design object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank design object 
   * @description Returns a blank object with default values
   */
  getDesignsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank design object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of designs */
  bulkDesigns: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Design User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Design"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of documents 
   * @description Lists documents, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the documents, these are handled by the DocumentsFilters class which defines the methods available
   */
  getDocuments: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of documents */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Document"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Sends an email for an entity 
   * @description Sends an email for an entity
   */
  sendEmailTemplate: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The template subject and body */
    requestBody: {
      content: {
        "application/json": {
          /** @description The email subject */
          subject?: string;
          /** @description The email body */
          body?: string;
          /** @description The entity name */
          entity?: string;
          /** @description The entity_id */
          entity_id?: string;
          /** @description The template required */
          template?: string;
        };
      };
    };
    responses: {
      /** @description success */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Template"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of expense_categories 
   * @description Lists tax rates
   */
  getExpenseCategorys: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
    };
    responses: {
      /** @description A list of expense_categories */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a expense category 
   * @description Adds an expense category to the system
   */
  storeExpenseCategory: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Expens Category object 
   * @description Returns a blank object with default values
   */
  getExpenseCategoryCreate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Expens Category object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Expens Category 
   * @description Displays an ExpenseCategory by id
   */
  showExpenseCategory: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ExpenseCategory Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Expens Category object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a tax rate 
   * @description Handles the updating of a tax rate by id
   */
  updateExpenseCategory: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ExpenseCategory Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the ExpenseCategory object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ExpenseCategory 
   * @description Handles the deletion of an ExpenseCategory by id
   */
  deleteExpenseCategory: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ExpenseCategory Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Expens Category for editting 
   * @description Displays a Expens Category by id
   */
  editExpenseCategory: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The ExpenseCategory Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Expens Category object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["ExpenseCategory"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of ExpenseCategorys */
  bulkExpenseCategorys: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Expens Categorys */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The ExpenseCategory List response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of expenses 
   * @description Lists expenses, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the expenses, these are handled by the ExpenseFilters class which defines the methods available
   */
  getExpenses: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of expenses */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Expense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the expense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Expense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Expense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Expense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getExpensesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of expenses */
  bulkExpenses: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Expense User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a expense 
   * @description Handles the uploading of a document to a expense
   */
  uploadExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Expense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Expense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Expense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Export data from the system 
   * @description Export data from the system
   */
  getExport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of group_settings 
   * @description Lists group_settings, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the group_settings, these are handled by the GroupSettingFilters class which defines the methods available
   */
  getGroupSettings: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of group_settings */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a GroupSetting 
   * @description Adds an GroupSetting to the system
   */
  storeGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved GroupSetting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank GroupSetting object 
   * @description Returns a blank object with default values
   */
  getGroupSettingsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank GroupSetting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an GroupSetting 
   * @description Displays an GroupSetting by id
   */
  showGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The GroupSetting Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the GroupSetting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an GroupSetting 
   * @description Handles the updating of an GroupSetting by id
   */
  updateGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The GroupSetting Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the GroupSetting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a GroupSetting 
   * @description Handles the deletion of an GroupSetting by id
   */
  deleteGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The GroupSetting Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an GroupSetting for editting 
   * @description Displays an GroupSetting by id
   */
  editGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The GroupSetting Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the GroupSetting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["GroupSetting"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of group_settings */
  bulkGroupSettings: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description An array of group_settings ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a group setting 
   * @description Handles the uploading of a document to a group setting
   */
  uploadGroupSetting: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Group Setting Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Group Setting object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Pre Import checks - returns a reference to the job and the headers of the CSV 
   * @description Pre Import checks - returns a reference to the job and the headers of the CSV
   */
  preimport: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The CSV file */
    requestBody: {
      content: {
        "multipart/form-data": string;
      };
    };
    responses: {
      /** @description Returns a reference to the file */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Import data from the system 
   * @description Import data from the system
   */
  getImportJson: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Processing webhooks from Apple for in app purchases 
   * @description Adds an credit to the system
   */
  confirmApplePurchase: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved credit object */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Processing event webhooks from Apple for in purchase / subscription status update 
   * @description Adds an credit to the system
   */
  processAppleWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved credit object */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of invoices 
   * @description Lists invoices, search and filters allow fine grained lists to be generated.
   *      *
   *      *		Query parameters can be added to performed more fine grained filtering of the invoices, these are handled by the InvoiceFilters class which defines the methods available
   */
  getInvoices: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of invoices */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a invoice 
   * @description Adds an invoice to the system
   */
  storeInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FillableInvoice"];
      };
    };
    responses: {
      /** @description Returns the saved invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank invoice object 
   * @description Returns a blank object with default values
   */
  getInvoicesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an invoice 
   * @description Displays an invoice by id
   */
  showInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an invoice 
   * @description Handles the updating of an invoice by id
   */
  updateInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a invoice 
   * @description Handles the deletion of an invoice by id
   */
  deleteInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an invoice for editting 
   * @description Displays an invoice by id
   */
  editInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of invoices */
  bulkInvoices: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an invoice 
   * @description Performs a custom action on an invoice.
   *      *
   *      *        The current range of actions are as follows
   *      *        - clone_to_invoice
   *      *        - clone_to_quote
   *      *        - history
   *      *        - delivery_note
   *      *        - mark_paid
   *      *        - download
   *      *        - archive
   *      *        - delete
   *      *        - email
   */
  actionInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Download a specific invoice by invitation key 
   * @description Downloads a specific invoice
   */
  downloadInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Invitation Key 
         * @example D2J234DFA
         */
        invitation_key: string;
      };
    };
    responses: {
      /** @description Returns the invoice pdf */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Download a specific invoice delivery notes 
   * @description Downloads a specific invoice delivery notes
   */
  deliveryNote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hahsed Id 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the invoice delivery note pdf */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a invoice 
   * @description Handles the uploading of a document to a invoice
   */
  uploadInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Invoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts to claim a white label license 
   * @description Attempts to claim a white label license
   */
  getClaimLicense: {
    parameters: {
      query: {
        /**
         * @description The license hash 
         * @example d87sh-s755s-s7d76-sdsd8
         */
        license_key: string;
        /**
         * @description The ID of the product purchased. 
         * @example 1
         */
        product_id: string;
      };
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Success! */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of logout 
   * @description Lists all logout
   */
  getLogout: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Success message */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts to purge a company record and all its child records 
   * @description Attempts to purge a company record and all its child records
   */
  postPurgeCompany: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        company: string;
      };
    };
    responses: {
      /** @description Success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts to purge a companies child records but save the company record and its settings 
   * @description Attempts to purge a companies child records but save the company record and its settings
   */
  postPurgeCompanySaveSettings: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Company Hashed ID 
         * @example D2J234DFA
         */
        company: string;
      };
    };
    responses: {
      /** @description Success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Starts the migration from previous version of Invoice Ninja 
   * @description Starts the migration from previous version of Invoice Ninja
   */
  postStartMigration: {
    parameters: {
      query: {
        /**
         * @description The migraton file 
         * @example migration.zip
         */
        migration: Record<string, never>;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
        "X-Api-Password": components["parameters"]["X-Api-Password"];
      };
    };
    responses: {
      /** @description Success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts to create a one time token 
   * @description Attempts to create a one time token
   */
  oneTimeToken: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The Company User response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of payments 
   * @description Lists payments, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the payments, these are handled by the PaymentFilters class which defines the methods available
   */
  getPayments: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of payments */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Payment 
   * @description Adds an Payment to the system
   */
  storePayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The payment request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Payment"];
      };
    };
    responses: {
      /** @description Returns the saved Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Payment object 
   * @description Returns a blank object with default values
   */
  getPaymentsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Payment 
   * @description Displays an Payment by id
   */
  showPayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an Payment 
   * @description Handles the updating of an Payment by id
   */
  updatePayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Payment 
   * @description Handles the deletion of an Payment by id
   */
  deletePayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Payment for editting 
   * @description Displays an Payment by id
   */
  editPayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of payments */
  bulkPayments: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Payment response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an Payment 
   * @description Performs a custom action on an Payment.
   * 
   *     The current range of actions are as follows
   *     - clone_to_Payment
   *     - clone_to_quote
   *     - history
   *     - delivery_note
   *     - mark_paid
   *     - download
   *     - archive
   *     - delete
   *     - email
   */
  actionPayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Refund 
   * @description Adds an Refund to the system
   */
  storeRefund: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The refund request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Payment"];
      };
    };
    responses: {
      /** @description Returns the saved Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a payment 
   * @description Handles the uploading of a document to a payment
   */
  uploadPayment: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of payment terms 
   * @description Lists payment terms
   */
  getPaymentTerms: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of payment terms */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Payment 
   * @description Adds a Payment Term to the system
   */
  storePaymentTerm: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The payment_terms request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PaymentTerm"];
      };
    };
    responses: {
      /** @description Returns the saved Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank PaymentTerm object 
   * @description Returns a blank object with default values
   */
  getPaymentTermsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank PaymentTerm object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Payment"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Payment Term 
   * @description Displays an Payment Term by id
   */
  showPaymentTerm: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Term Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment Term object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a Payment Term 
   * @description Handles the updating of an Payment Termby id
   */
  updatePaymentTerm: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Term Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment Term object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Payment Term 
   * @description Handles the deletion of an PaymentTerm by id
   */
  deletePaymentTerm: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Term Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Payment Term for editting 
   * @description Displays an Payment Term by id
   */
  editPaymentTerms: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Payment Term Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Payment object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of payment terms */
  bulkPaymentTerms: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Payment Ter,s */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Payment Terms response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["PaymentTerm"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Attempts to ping the API 
   * @description Attempts to ping the API
   */
  getPing: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The company and user name */
      200: never;
    };
  };
  /**
   * Attempts to get a health check from the API 
   * @description Attempts to get a health check from the API
   */
  getHealthCheck: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A key/value map of the system health */
      200: never;
    };
  };
  /**
   * Processing webhooks from PostMark 
   * @description Adds an credit to the system
   */
  postmarkWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved credit object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Returns a pdf preview 
   * @description Returns a pdf preview.
   */
  getPreview: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The pdf response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Returns a pdf preview for purchase order 
   * @description Returns a pdf preview for purchase order.
   */
  getPreviewPurchaseOrder: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description The pdf response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of products 
   * @description Lists products, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the products, these are handled by the ProductFilters class which defines the methods available
   */
  getProducts: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of products */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Product 
   * @description Adds an Product to the system
   */
  storeProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Product object 
   * @description Returns a blank object with default values
   */
  getProductsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Product 
   * @description Displays an Product by id
   */
  showProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Product Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an Product 
   * @description Handles the updating of an Product by id
   */
  updateProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Product Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Product 
   * @description Handles the deletion of an Product by id
   */
  deleteProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Product Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Product for editting 
   * @description Displays an Product by id
   */
  editProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Product Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of products */
  bulkProducts: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Hashed IDs */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Product response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a product 
   * @description Handles the uploading of a document to a product
   */
  uploadProduct: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Product Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Product object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of projects 
   * @description Lists projects
   */
  getProjects: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of projects */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a project 
   * @description Adds an project to a company
   */
  storeProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved project object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a project 
   * @description Displays a project by id
   */
  showProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Project Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the expense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a project 
   * @description Handles the updating of a project by id
   */
  updateProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Project Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the project object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a project 
   * @description Handles the deletion of a project by id
   */
  deleteProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Project Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a project for editting 
   * @description Displays a project by id
   */
  editProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Project Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the project object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank project object 
   * @description Returns a blank object with default values
   */
  getProjectsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank project object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of projects */
  bulkProjects: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Project User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a project 
   * @description Handles the uploading of a document to a project
   */
  uploadProject: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Project Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Project object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of purchase orders 
   * @description Lists purchase orders, search and filters allow fine grained lists to be generated.
   *      *
   *      *      Query parameters can be added to performed more fine grained filtering of the purchase orders, these are handled by the PurchaseOrderFilters class which defines the methods available
   */
  getPurchaseOrders: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of purchase orders */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a purchase order 
   * @description Adds an purchase order to the system
   */
  storePurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved purchase order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank purchase order object 
   * @description Returns a blank object with default values
   */
  getPurchaseOrderCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank purchase order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an purcase orders 
   * @description Displays an purchase order by id
   */
  showPurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Purchase order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the purchase order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a purchase order 
   * @description Handles the deletion of an purchase orders by id
   */
  deletePurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The purhcase order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an purchase order for editting 
   * @description Displays an purchase order by id
   */
  editPurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The purchase order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the purchase order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an purchase order 
   * @description Handles the updating of an purchase order by id
   */
  updatePurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The purchase order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the purchase order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Credit"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of purchase_orders */
  bulkPurchaseOrderss: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Purchase Order IDS */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Bulk Action response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an purchase order 
   * @description Performs a custom action on an purchase order.
   *      *
   *      *        The current range of actions are as follows
   *      *        - mark_paid
   *      *        - download
   *      *        - archive
   *      *        - delete
   *      *        - email
   */
  actionPurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Purchase Order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Invoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a purchase_orders 
   * @description Handles the uploading of a document to a purchase_order
   */
  uploadPurchaseOrder: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Purchase Order Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Purchase Order object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of quotes 
   * @description Lists quotes, search and filters allow fine grained lists to be generated.
   *      *
   *      *      Query parameters can be added to performed more fine grained filtering of the quotes, these are handled by the QuoteFilters class which defines the methods available
   */
  getQuotes: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of quotes */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Quote 
   * @description Adds an Quote to the system
   */
  storeQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Quote object 
   * @description Returns a blank object with default values
   */
  getQuotesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Quote 
   * @description Displays an Quote by id
   */
  showQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an Quote 
   * @description Handles the updating of an Quote by id
   */
  updateQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Quote 
   * @description Handles the deletion of an Quote by id
   */
  deleteQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an Quote for editting 
   * @description Displays an Quote by id
   */
  editQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of quotes */
  bulkQuotes: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Hashed ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Quote response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an Quote 
   * @description Performs a custom action on an Quote.
   * 
   *     The current range of actions are as follows
   *     - clone_to_quote
   *     - history
   *     - delivery_note
   *     - mark_paid
   *     - download
   *     - archive
   *     - delete
   *     - convert
   *     - convert_to_invoice
   *     - email
   */
  actionQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a quote 
   * @description Handles the uploading of a document to a quote
   */
  uploadQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Quote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Quote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Quote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of recurring_expenses 
   * @description Lists recurring_expenses, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the recurring_expenses, these are handled by the RecurringExpenseFilters class which defines the methods available
   */
  getRecurringExpenses: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of recurring_expenses */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringExpense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the recurring_expense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringExpense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringExpense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringExpense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getRecurringExpensesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of recurring_expenses */
  bulkRecurringExpenses: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The RecurringExpense User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a recurring_expense 
   * @description Handles the uploading of a document to a recurring_expense
   */
  uploadRecurringExpense: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringExpense Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringExpense object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringExpense"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of recurring_invoices 
   * @description Lists recurring_invoices, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the recurring_invoices, these are handled by the RecurringInvoiceFilters class which defines the methods available
   */
  getRecurringInvoices: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of recurring_invoices */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a RecurringInvoice 
   * @description Adds an RecurringInvoice to the system
   */
  storeRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank RecurringInvoice object 
   * @description Returns a blank object with default values
   */
  getRecurringInvoicesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an RecurringInvoice 
   * @description Displays an RecurringInvoice by id
   */
  showRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an RecurringInvoice 
   * @description Handles the updating of an RecurringInvoice by id
   */
  updateRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a RecurringInvoice 
   * @description Handles the deletion of an RecurringInvoice by id
   */
  deleteRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an RecurringInvoice for editting 
   * @description Displays an RecurringInvoice by id
   */
  editRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Download a specific invoice by invitation key 
   * @description Downloads a specific invoice
   */
  downloadRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Recurring Invoice Invitation Key 
         * @example D2J234DFA
         */
        invitation_key: string;
      };
    };
    responses: {
      /** @description Returns the recurring invoice pdf */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of recurring_invoices */
  bulkRecurringInvoices: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Hashed IDs */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The RecurringInvoice response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an RecurringInvoice 
   * @description Performs a custom action on an RecurringInvoice.
   * 
   *     The current range of actions are as follows
   *     - clone_to_RecurringInvoice
   *     - clone_to_quote
   *     - history
   *     - delivery_note
   *     - mark_paid
   *     - download
   *     - archive
   *     - delete
   *     - email
   */
  actionRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a recurring_invoice 
   * @description Handles the uploading of a document to a recurring_invoice
   */
  uploadRecurringInvoice: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringInvoice Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringInvoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringInvoice"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of recurring_quotes 
   * @description Lists recurring_quotes, search and filters allow fine grained lists to be generated.
   * 
   *         Query parameters can be added to performed more fine grained filtering of the recurring_quotes, these are handled by the RecurringQuoteFilters class which defines the methods available
   */
  getRecurringQuotes: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of recurring_quotes */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a RecurringQuote 
   * @description Adds an RecurringQuote to the system
   */
  storeRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank RecurringQuote object 
   * @description Returns a blank object with default values
   */
  getRecurringQuotesCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an RecurringQuote 
   * @description Displays an RecurringQuote by id
   */
  showRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringQuote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an RecurringQuote 
   * @description Handles the updating of an RecurringQuote by id
   */
  updateRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringQuote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a RecurringQuote 
   * @description Handles the deletion of an RecurringQuote by id
   */
  deleteRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringQuote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an RecurringQuote for editting 
   * @description Displays an RecurringQuote by id
   */
  editRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringQuote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of recurring_quotes */
  bulkRecurringQuotes: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Hashed ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The RecurringQuote response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a custom action on an RecurringQuote 
   * @description Performs a custom action on an RecurringQuote.
   * 
   *     The current range of actions are as follows
   *     - clone_to_RecurringQuote
   *     - clone_to_quote
   *     - history
   *     - delivery_note
   *     - mark_paid
   *     - download
   *     - archive
   *     - delete
   *     - email
   */
  actionRecurringQuote: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The RecurringQuote Hashed ID 
         * @example D2J234DFA
         */
        id: string;
        /**
         * @description The action string to be performed 
         * @example clone_to_quote
         */
        action: string;
      };
    };
    responses: {
      /** @description Returns the RecurringQuote object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["RecurringQuote"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Contact reports 
   * @description Export contact reports
   */
  getContactReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client reports 
   * @description Export client reports
   */
  getClientReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Credit reports 
   * @description Export credit reports
   */
  getCreditReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Document reports 
   * @description Export document reports
   */
  getDocumentReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Expense reports 
   * @description Export expense reports
   */
  getExpenseReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Invoice item reports 
   * @description Export invoice item reports
   */
  getInvoiceItemReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Invoice reports 
   * @description Export invoice reports
   */
  getInvoiceReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Payment reports 
   * @description Export payment reports
   */
  getPaymentReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Product reports 
   * @description Export product reports
   */
  getProductReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Product Salesreports 
   * @description Export product sales reports
   */
  getProductSalesReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Profit loss reports 
   * @description Profit loss report
   */
  getProfitLossReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Quote item reports 
   * @description Export Quote item reports
   */
  getQuoteItemReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Quote reports 
   * @description Export quote reports
   */
  getQuoteReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Recurring Invoice reports 
   * @description Export recurring invoice reports
   */
  getRecurringInvoiceReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Task reports 
   * @description Export task reports
   */
  getTaskReport: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenericReportSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Performs a system update 
   * @description Performs a system update
   */
  selfUpdate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Api-Password": components["parameters"]["X-Api-Password"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Success/failure response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of statics 
   * @description Lists all statics
   */
  getStatics: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of static data */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of subscriptions 
   * @description Lists subscriptions.
   */
  getSubscriptions: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of subscriptions */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a subscriptions 
   * @description Adds an subscriptions to the system
   */
  storeSubscription: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved subscriptions object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank subscriptions object 
   * @description Returns a blank object with default values
   */
  getSubscriptionsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank subscriptions object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an subscriptions 
   * @description Displays an subscriptions by id
   */
  showSubscription: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Subscription Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Subscription object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an subscriptions 
   * @description Handles the updating of an subscriptions by id
   */
  updateSubscription: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Subscription Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the subscriptions object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a subscriptions 
   * @description Handles the deletion of an subscriptions by id
   */
  deleteSubscription: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Subscription Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an subscriptions for editting 
   * @description Displays an subscriptions by id
   */
  editSubscription: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Subscription Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the invoice object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of subscriptions */
  bulkSubscriptions: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Subscription response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Sends a support message to Invoice Ninja team 
   * @description Allows a user to send a support message to the Invoice Ninja Team
   */
  supportMessage: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The message */
    requestBody: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": (string)[];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of system logs 
   * @description Lists system logs, search and filters allow fine grained lists to be generated.
   *      *
   *      *      Query parameters can be added to performed more fine grained filtering of the system logs, these are handled by the SystemLogFilters class which defines the methods available
   */
  getSystemLogs: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of system logs */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["SystemLog"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a system_logs 
   * @description Displays a system_logs by id
   */
  showSystemLogs: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The system_logs Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the system_logs object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["SystemLog"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of tasks 
   * @description Lists tasks, search and filters allow fine grained lists to be generated.
   *      *
   *      *   Query parameters can be added to performed more fine grained filtering of the tasks, these are handled by the TaskFilters class which defines the methods available
   */
  getTasks: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of tasks */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Task Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the task object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Task Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Task Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Task Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getTasksCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of tasks */
  bulkTasks: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Task User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a task 
   * @description Handles the uploading of a document to a task
   */
  uploadTask: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Task Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Task object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Task"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Sort tasks on KanBan 
   * @description Sorts tasks after drag and drop on the KanBan.
   */
  sortTasks: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns an Ok, 200 HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Task Scheduler Index 
   * @description Get all schedulers with associated jobs
   */
  getTaskSchedulers: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Create task scheduler with job  
   * @description Create task scheduler with a job (action(job) request should be sent via request also. Example: We want client report to be job which will be run
   *      * multiple times, we should send the same parameters in the request as we would send if we wanted to get report, see example
   */
  createTaskScheduler: {
    parameters: {
      header: {
        "X-Api-Secret": components["parameters"]["X-Api-Secret"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskSchedulerSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank scheduler object 
   * @description Returns a blank object with default values
   */
  getTaskScheduler: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank scheduler object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskSchedulerSchema"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Show given scheduler 
   * @description Get scheduler with associated job
   */
  showTaskScheduler: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Scheduler Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Update task scheduler  
   * @description Update task scheduler
   */
  updateTaskScheduler: {
    parameters: {
      header: {
        "X-Api-Secret": components["parameters"]["X-Api-Secret"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Scheduler Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskSchedulerSchema"];
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Destroy Task Scheduler 
   * @description Destroy task scheduler and its associated job
   */
  destroyTaskScheduler: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Scheduler Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description success */
      200: never;
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of task_schedulers */
  bulkTaskSchedulerActions: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description array of ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The TaskSchedule response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskSchedulerSchema"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of task statuses 
   * @description Lists task statuses
   */
  getTaskStatuses: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of task statuses */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a TaskStatus 
   * @description Adds a TaskStatusto the system
   */
  storeTaskStatus: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The task_status request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskStatus"];
      };
    };
    responses: {
      /** @description Returns the saved TaskStatus object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank TaskStatus object 
   * @description Returns a blank object with default values
   */
  getTaskStatussCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank TaskStatus object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a TaskStatus Term 
   * @description Displays an TaskStatusby id
   */
  showTaskStatus: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaskStatusHashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the TaskStatusobject */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a TaskStatus Term 
   * @description Handles the updating of an TaskStatus Termby id
   */
  updateTaskStatus: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaskStatusHashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the TaskStatusobject */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a TaskStatus Term 
   * @description Handles the deletion of an TaskStatus by id
   */
  deleteTaskStatus: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaskStatusHashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an TaskStatusfor editting 
   * @description Displays an TaskStatusby id
   */
  editTaskStatuss: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaskStatusHashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the TaskStatus object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of task statuses */
  bulkTaskStatuss: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description TaskStatus Ter,s */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The TaskStatus Terms response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaskStatus"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of tax_rates 
   * @description Lists tax rates
   */
  getTaxRates: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
    };
    responses: {
      /** @description A list of tax_rates */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaxRate"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Tax Rate object 
   * @description Returns a blank object with default values
   */
  getTaxRateCreate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Tax Rate object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaxRate"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Tax Rate 
   * @description Displays an TaxRate by id
   */
  showTaxRate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaxRate Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Tax Rate object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaxRate"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a tax rate 
   * @description Handles the updating of a tax rate by id
   */
  updateTaxRate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaxRate Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the TaxRate object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaxRate"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a TaxRate 
   * @description Handles the deletion of an TaxRate by id
   */
  deleteTaxRate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaxRate Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Tax Rate for editting 
   * @description Displays a Tax Rate by id
   */
  editTaxRate: {
    parameters: {
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The TaxRate Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Tax Rate object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["TaxRate"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of TaxRates */
  bulkTaxRates: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Tax Rates */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The TaxRate List response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Returns a entity template with the template variables replaced with the Entities 
   * @description Returns a entity template with the template variables replaced with the Entities
   */
  getShowTemplate: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description The template subject and body */
    requestBody: {
      content: {
        "application/json": {
          /** @description The email template subject */
          subject?: string;
          /** @description The email template body */
          body?: string;
        };
      };
    };
    responses: {
      /** @description The template response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Template"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of company tokens 
   * @description Lists company tokens.
   *      *
   *      *   Query parameters can be added to performed more fine grained filtering of the tokens, these are handled by the TokenFilters class which defines the methods available
   */
  getTokens: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of tokens */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a token 
   * @description Adds an token to a company
   */
  storeToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved token object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a token 
   * @description Displays a token by id
   */
  showToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Token Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the token object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a token 
   * @description Handles the updating of a token by id
   */
  updateToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Token Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the token object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a token 
   * @description Handles the deletion of a token by id
   */
  deleteToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Token Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a token for editting 
   * @description Displays a token by id
   */
  editToken: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Token Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the token object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank token object 
   * @description Returns a blank object with default values
   */
  getTokensCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank token object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of tokens */
  bulkTokens: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Token ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Token response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["CompanyToken"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of users 
   * @description Lists users, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the users, these are handled by the UserFilters class which defines the methods available
   */
  getUsers: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of users */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a User 
   * @description Adds an User to the system
   */
  storeUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved User object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank User object 
   * @description Returns a blank object with default values
   */
  getUsersCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank User object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an User 
   * @description Displays an User by id
   */
  showUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The User Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the User object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates an User 
   * @description Handles the updating of an User by id
   */
  updateUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The User Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the User object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a User 
   * @description Handles the deletion of an User by id
   */
  deleteUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        /**
         * @description Customized name for the Users API Token 
         * @example iOS Device 11 iPad
         */
        token_name?: string;
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The User Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows an User for editting 
   * @description Displays an User by id
   */
  editUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The User Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the User object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of users */
  bulkUsers: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description Hashed ids */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Detach an existing user to a company 
   * @description Detach an existing user from a company
   */
  detachUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The user hashed_id 
         * @example FD767dfd7
         */
        user: string;
      };
    };
    responses: {
      /** @description Success response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Reconfirm an existing user to a company 
   * @description Reconfirm an existing user from a company
   */
  inviteUser: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The user hashed_id 
         * @example FD767dfd7
         */
        user: string;
      };
    };
    responses: {
      /** @description Success response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Reconfirm an existing user to a company 
   * @description Reconfirm an existing user from a company
   */
  inviteUserReconfirm: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The user hashed_id 
         * @example FD767dfd7
         */
        user: string;
      };
    };
    responses: {
      /** @description Success response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of vendors 
   * @description Lists vendors, search and filters allow fine grained lists to be generated.
   * 
   *     Query parameters can be added to performed more fine grained filtering of the vendors, these are handled by the VendorFilters class which defines the methods available
   */
  getVendors: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of vendors */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a client 
   * @description Adds an client to a company
   */
  storeVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client 
   * @description Displays a client by id
   */
  showVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Vendor Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the vendor object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a client 
   * @description Handles the updating of a client by id
   */
  updateVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Vendor Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a client 
   * @description Handles the deletion of a client by id
   */
  deleteVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Vendor Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a client for editting 
   * @description Displays a client by id
   */
  editVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Vendor Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank client object 
   * @description Returns a blank object with default values
   */
  getVendorsCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank client object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of vendors */
  bulkVendors: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Vendor User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Uploads a document to a vendor 
   * @description Handles the uploading of a document to a vendor
   */
  uploadVendor: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Vendor Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Vendor object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Vendor"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Executes the task scheduler via a webcron service 
   * @description Executes the task scheduler via a webcron service
   */
  webcron: {
    parameters: {
      header: {
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Success response */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a list of Webhooks 
   * @description Lists Webhooks, search and filters allow fine grained lists to be generated.
   *      *
   *      *      Query parameters can be added to performed more fine grained filtering of the Webhooks, these are handled by the WebhookFilters class which defines the methods available
   */
  getWebhooks: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A list of Webhooks */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Adds a Webhook 
   * @description Adds an Webhook to a company
   */
  storeWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description Returns the saved Webhook object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Webhook 
   * @description Displays a Webhook by id
   */
  showWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Webhook Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Webhook object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates a Webhook 
   * @description Handles the updating of a Webhook by id
   */
  updateWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Webhook Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Webhook object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Webhook 
   * @description Handles the deletion of a Webhook by id
   */
  deleteWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Webhook Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns a HTTP status */
      200: never;
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Shows a Webhook for editting 
   * @description Displays a Webhook by id
   */
  editWebhook: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
      path: {
        /**
         * @description The Webhook Hashed ID 
         * @example D2J234DFA
         */
        id: string;
      };
    };
    responses: {
      /** @description Returns the Webhook object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Gets a new blank Webhook object 
   * @description Returns a blank object with default values
   */
  getWebhooksCreate: {
    parameters: {
      query?: {
        include?: components["parameters"]["include"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    responses: {
      /** @description A blank Webhook object */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Performs bulk actions on an array of Webhooks */
  bulkWebhooks: {
    parameters: {
      query?: {
        index?: components["parameters"]["index"];
      };
      header: {
        "X-Api-Token": components["parameters"]["X-Api-Token"];
        "X-Requested-With": components["parameters"]["X-Requested-With"];
      };
    };
    /** @description User credentials */
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description The Webhook User response */
      200: {
        headers: {
          "X-MINIMUM-CLIENT-VERSION": components["headers"]["X-MINIMUM-CLIENT-VERSION"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
        };
        content: {
          "application/json": components["schemas"]["Webhook"];
        };
      };
      /** @description Validation error */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationError"];
        };
      };
      /** @description Unexpected Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
}
